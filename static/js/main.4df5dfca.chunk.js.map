{"version":3,"sources":["components/NavBarAccountButton.js","components/LoginDialog.js","components/TopNavBar.js","components/SubmitSelectionButton.js","components/InvestmentStrategyRadios.js","components/StockListItem.js","components/StockSelectedList.js","components/StockSearchBox.js","views/StockSelectSection.js","pages/PortfolioPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","logoutButtonOnClick","e","setUserData","userName","userEmail","cookies","Cookies","remove","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","ref","aria-controls","undefined","aria-haspopup","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","signUpButton","marginRight","loginInputBox","margin","spacing","dialogActions","LoginDialog","emailInputIsError","setEmailError","passwordInputIsError","setPasswordError","emailInputErrorMsg","setEmailErrorMsg","passwordInputMsg","setPasswordErrorMsg","emailInput","passwordInput","checkEmailInputEmpty","value","length","console","log","checkPasswordInputEmpty","signUpButtonOnClick","a","request","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","jsonData","isSuccess","alert","errorMsg","loginButtonOnClick","set","path","Dialog","isOpen","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","inputRef","label","type","variant","fullWidth","error","helperText","onBlur","DialogActions","flexGrow","brandButton","rightButtons","marginLeft","TopNavBar","isLoginDialogOpen","setLoginDialogOpen","AppBar","position","Toolbar","size","userData","CreatePortfolioButton","submitSelection","settings","textAlign","InvestmentStrategyRadios","setValue","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","StockListItem","ListItem","alignItems","ListItemText","primary","companyName","secondary","companyCode","IconButton","edge","stockComponent","listSubHeader","renderRow","data","index","rowItem","StockSelectedList","selectedStocks","additionalStyles","Box","height","itemSize","itemCount","itemData","searchBox","padding","minWidth","width","input","flex","iconButton","divider","StockSearchBox","InputBase","placeholder","inputProps","StockSelectSection","boxShadow","title","PortfolioPage","Grid","container","direction","justify","item","xs","Typography","gridItem","App","get","createMuiTheme","palette","main","themeName","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4df5dfca.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userName');\r\n    cookies.remove('userEmail');\r\n\r\n    handleClose(e)\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          Account\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  signUpButton: {\r\n    marginRight: 'auto',\r\n  },\r\n  loginInputBox: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  }\r\n}));\r\n  \r\nexport default function LoginDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if(emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if(passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const signUpButtonOnClick = async　(e) => {\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    // If no error in both textfield\r\n    if (emailInput.current.value.length > 1 && passwordInput.current.value.length > 1) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/user/signup\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            alert(\"Sign up success\");\r\n            props.handleClose();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const loginButtonOnClick = async　(e) => {\r\n    // If no error in both textfield\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    if (emailInput.current.value.length > 1 && passwordInput.current.value.length > 1) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/user/login\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // Temp user name\r\n            const userName = \"Steve\";\r\n            const userEmail = emailInput.current.value;\r\n\r\n            props.setUserData({\r\n              userName: userName,\r\n              userEmail: userEmail,\r\n            });\r\n\r\n            // Store user data into cookies\r\n            const cookies = new Cookies();\r\n            cookies.set('userName', userName, { path: '/' });\r\n            cookies.set('userEmail', userEmail, { path: '/' });\r\n            props.handleClose();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.loginInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.loginInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button onClick={signUpButtonOnClick} color=\"primary\" className={classes.signUpButton}>\r\n            Sign up\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={loginButtonOnClick} color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport LoginDialog from './LoginDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    setLoginDialogOpen(true);\r\n  };\r\n\r\n  const handleLoginDialogClose = () => {\r\n    setLoginDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <LoginDialog isOpen={isLoginDialogOpen} handleClose={handleLoginDialogClose} setUserData={props.setUserData}></LoginDialog>\r\n        <Toolbar>\r\n          <Button className={classes.brandButton} color=\"inherit\" size=\"large\">\r\n            AI Asset\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail == undefined\r\n              ? \r\n                <Button color=\"inherit\" onClick={(e) => {handleLoginDialogOpen()}}>\r\n                  Login\r\n                </Button>\r\n              : \r\n                <NavBarAccountButton setUserData={props.setUserData}></NavBarAccountButton>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CreatePortfolioButton() {\r\n  const classes = useStyles();\r\n\r\n  const submitSelection = async () => {\r\n    // Submit user's stock selection to the server\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'selectedStocks': ['123']\r\n        })\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/post-test\", settings)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        console.log(jsonData);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log('fetch failed', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"primary\" size='large' onClick={(e) => {submitSelection()}}>\r\n        Create Portfolio\r\n      </Button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'initial',\r\n  }\r\n}));\r\n\r\nexport default function InvestmentStrategyRadios() {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState('active');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Investment Strategy</FormLabel>\r\n        <RadioGroup aria-label=\"Investment Strategy\" name=\"strategy\" value={value} onChange={handleChange}>\r\n          <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n          <FormControlLabel value=\"passive\" control={<Radio />} label=\"Passive\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function StockListItem(props) {\r\n  /* \r\n    props data structure-\r\n      companyName(string): the name of the company, Ex: Apple Inc.\r\n      companyCode(string): the code of the company in the market, Ex: NASDAQ: AAPL\r\n  */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText primary={props.companyName} secondary={props.companyCode} />\r\n        <IconButton edge=\"end\" aria-label=\"delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport StockListItem from './StockListItem'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  stockComponent: {},\r\n  listSubHeader: {\r\n    textAlign: 'initial'\r\n  }\r\n}));\r\n\r\n\r\nfunction renderRow(props) {\r\n  const { data, index, style } = props;\r\n  const rowItem = data[index];\r\n  return (\r\n    <div style={style}>\r\n      {\r\n        <StockListItem companyName={rowItem.companyName} companyCode={rowItem.companyCode}>\r\n        </StockListItem>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction StockSelectedList(props) {\r\n  const { selectedStocks, additionalStyles } = props\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={additionalStyles.stockComponent}>\r\n      <FixedSizeList\r\n        height={350}\r\n        itemSize={60}\r\n        itemCount={selectedStocks.length}\r\n        itemData={selectedStocks}\r\n      >\r\n        {renderRow}\r\n      </FixedSizeList >\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StockSelectedList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{},\r\n  stockComponent: {},\r\n  searchBox: {\r\n    margin: theme.spacing(2, 0, 0),\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 330,\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n  \r\nfunction StockSearchBox(props) {\r\n  const { additionalStyles } = props\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={additionalStyles.stockComponent}>\r\n      <Paper component=\"form\" className={classes.searchBox}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Search Stocks\"\r\n          inputProps={{ 'aria-label': 'search stocks' }}\r\n        />\r\n        <IconButton className={classes.iconButton} aria-label=\"search\" onClick={(e) => {console.log(\"search on click\")}}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockSearchBox;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockSelectedList from '../components/StockSelectedList'\r\nimport StockSearchBox from '../components/StockSearchBox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2, 2, 2),\r\n    flexGrow: 1,\r\n  },\r\n  stockComponent: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n  \r\nexport default function StockSelectSection(props) {\r\n  const classes = useStyles();\r\n  const { selectedStocks } = props\r\n  \r\n  return (\r\n    <Box className={classes.root} boxShadow={0}>\r\n      <StockSearchBox additionalStyles={classes} />\r\n      <StockSelectedList additionalStyles={classes} selectedStocks={selectedStocks}/>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TopNavBar from '../components/TopNavBar'\r\nimport InvestmentStrategyRadios from '../components/InvestmentStrategyRadios'\r\nimport SubmitSelectionButton from '../components/SubmitSelectionButton';\r\nimport StockSelectSection from '../views/StockSelectSection'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction PortfolioPage() {\r\n  const classes = useStyles();\r\n  const [selectedStocks, setSelectedData] = React.useState([\r\n    { companyName: \"Alphabet Inc.\", companyCode: \"NASDAQ：GOOG\" },\r\n    { companyName: \"Apple Inc.\", companyCode: \"NASDAQ: AAPL\" },\r\n    { companyName: \"Amazon.com, Inc.\", companyCode: \"NASDAQ: AMZN\" }\r\n  ]);\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid className={classes.title} item xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Choose your strategy\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12}>\r\n          <InvestmentStrategyRadios />\r\n        </Grid>\r\n        <Grid className={classes.title} item xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Select Stocks\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12} >\r\n          <StockSelectSection selectedStocks={selectedStocks}>\r\n          </StockSelectSection>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12} >\r\n          <SubmitSelectionButton />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport SubmitSelectionButton from './components/SubmitSelectionButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InvestmentStrategyRadios from './components/InvestmentStrategyRadios'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StockSelectSection from './views/StockSelectSection'\r\nimport PortfolioPage from './pages/PortfolioPage'\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <TopNavBar userData={userData} setUserData={setUserData}></TopNavBar>\r\n        <PortfolioPage></PortfolioPage>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme.js'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <App/>\n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}