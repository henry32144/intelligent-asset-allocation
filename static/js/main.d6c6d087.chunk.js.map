{"version":3,"sources":["components/NavBarAccountButton.js","Constants.js","components/LoginDialog.js","components/SignupDialog.js","components/MessageDialog.js","components/TopNavBar.js","components/CreatePortfolioDialog.js","components/StockListItem.js","components/StockSelectedList.js","views/StockSelectSection.js","components/StockSearchBox.js","components/PortfolioMenuButtons.js","components/PortfolioDetailButtons.js","components/PortfolioToolBar.js","components/NewsCard.js","components/NewsList.js","views/NewsSection.js","views/PerformanceSection.js","views/WeightSection.js","pages/PortfolioPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","popperStyle","zIndex","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","Cookies","event","current","contains","target","logoutButtonOnClick","e","setUserData","userId","userName","userEmail","cookies","remove","path","window","location","reload","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","ref","aria-controls","undefined","aria-haspopup","onClick","userData","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","BASEURL","dialogLeftButton","marginRight","dialogInputBox","margin","spacing","dialogActions","errorMessage","circleProgress","position","top","left","marginTop","marginLeft","LoginDialog","loading","setLoading","emailInputIsError","setEmailError","passwordInputIsError","setPasswordError","emailInputErrorMsg","setEmailErrorMsg","passwordInputMsg","setPasswordErrorMsg","errorMsg","setErrorMsg","emailInput","passwordInput","checkEmailInputEmpty","value","length","console","log","checkPasswordInputEmpty","openSignupDialog","a","openSignup","loginButtonOnClick","request","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","jsonData","isSuccess","set","alert","Dialog","isOpen","onClose","aria-labelledby","Fade","in","unmountOnExit","CircularProgress","DialogTitle","DialogContent","TextField","autoFocus","inputRef","label","type","variant","fullWidth","error","helperText","onBlur","Typography","DialogActions","SignupDialog","nameInputIsError","setNameError","nameInputErrorMsg","setNameErrorMsg","nameInput","checkNameInputEmpty","signUpButtonOnClick","setDialogMessage","openMessageDialog","message","textAlign","MessageDialog","title","flexGrow","brandButton","rightButtons","TopNavBar","isLoginDialogOpen","setLoginDialogOpen","isSignupDialogOpen","setSignupDialogOpen","isMessageDialogOpen","setMessageDialogOpen","dialogMessage","AppBar","Toolbar","size","CreatePortfolioDialog","createButtonOnClick","createNewPortfolio","listItemText","textOverflow","StockListItem","ListItem","button","alignItems","companySymbol","stockListItemOnclick","ListItemText","primary","companyName","secondary","IconButton","edge","aria-label","removeSelectedStock","companyId","stockComponent","listSubHeader","listTitle","saveButton","height","width","emptyText","buttonProgress","StockSelectedList","selectedStocks","Array","from","index","findIndex","x","splice","newPortfolioStocks","map","item","array","setSelectedStocks","symbol","currentSelectedStock","setCurrentSelectedStock","renderRow","data","rowItem","Box","component","Grid","container","direction","disabled","saveButtonLoading","savePortfolio","Divider","itemSize","itemCount","itemData","padding","breakpoints","up","StockSelectSection","boxShadow","searchBox","minWidth","StockSearchBox","companyData","additionalStyles","addStockToPortfolio","newValue","find","setDialogTitle","Autocomplete","freeSolo","disableClearable","onChange","options","getOptionLabel","option","filterOptions","inputValue","matchSorter","keys","slice","renderInput","params","InputProps","expandButton","popperRoot","popperMenuItem","paddingRight","PortfolioMenuButtons","createPortfolioOnClick","handleCreatePortfolioDialogOpen","portfolioMenuItems","userPortfolios","portfolio","portfolioId","toString","setCurrentSelectedPortfolio","portfolioStocks","setSideBarExpand","portfolioButtonOnClick","noWrap","portfolioName","Tooltip","menuButton","isSideBarExpanded","endIcon","currentSelectedPortfolio","light","fontSize","popover","pointerEvents","paper","PortfolioDetailButtons","setSectionCode","menuButtons","PortfolioToolBar","justify","xs","sm","setUserPortfolios","Hidden","smUp","showSearchButton","xsDown","bullet","transform","pos","marginBottom","sentence","typography","body1","keySentence","backgroundColor","NewsCard","Card","CardContent","gutterBottom","date","paragraph","isKeySentence","text","NewsList","newsData","news","sectionRoot","sectionTitle","NewsSection","PerformanceSection","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","hoverBackgroundColor","portfolioPage","portfolioContent","flex","overflowY","sideBar","PortfolioPage","setCompanyData","setNewsData","companyDataMapping","setCompanyDataMapping","setPortfolioStocks","dataLoaded","setDataLoaded","setSaveButtonLoading","saveButtonDisabled","isCreatePortfolioDialogOpen","setCreatePortfolioDialogOpen","dialogTitle","currentSectionCode","stockSymbols","stocksDetail","i","push","handleMessageDialogOpen","handleCreatePortfolioDialogClose","getCompanyData","newCompanyDataMapping","newCompanyData","companInfo","industry","company_name","id_","getNews","companyNames","newNewsData","paragraphs","j","keysent","dt","Date","getFullYear","getMonth","getDate","company","newPortfolio","user_id","portfolio_name","portfolio_stocks","getUserPortfolio","newPortfolios","currentPortfolioStocks","tempNewPortfolios","forEach","div","initial","animate","variants","opacity","duration","closed","md","renderSection","App","get","createMuiTheme","palette","main","themeName","Boolean","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"yYAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,cAAe,CACbC,MAAO,WAETC,YAAa,CACXC,OAAQ,YAIG,SAASC,EAAoBC,GAC1C,IAAMC,EAAUX,IADiC,EAEzBY,IAAMC,UAAS,GAFU,mBAE1CC,EAF0C,KAEpCC,EAFoC,KAG3CC,EAAYJ,IAAMK,OAAO,MAOzBC,GANU,IAAIC,IAMA,SAACC,GACfJ,EAAUK,SAAWL,EAAUK,QAAQC,SAASF,EAAMG,SAG1DR,GAAQ,KAGJS,EAAsB,SAACC,GAC3Bf,EAAMgB,YAAY,CAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,OAIb,IAAMC,EAAU,IAAIX,IACpBW,EAAQC,OAAO,SAAU,CAAEC,KAAM,MACjCF,EAAQC,OAAO,WAAY,CAAEC,KAAM,MACnCF,EAAQC,OAAO,YAAa,CAAEC,KAAM,MAEpCd,EAAYO,GACZQ,OAAOC,SAASC,QAAO,IAGzB,SAASC,EAAkBhB,GACP,QAAdA,EAAMiB,MACRjB,EAAMkB,iBACNvB,GAAQ,IAKZ,IAAMwB,EAAW3B,IAAMK,OAAOH,GAS9B,OARAF,IAAM4B,WAAU,YACW,IAArBD,EAASlB,UAA6B,IAATP,GAC/BE,EAAUK,QAAQoB,QAGpBF,EAASlB,QAAUP,IAClB,CAACA,IAGF,yBAAK4B,UAAW/B,EAAQR,MACtB,6BACE,kBAACwC,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,MACXC,IAAK7B,EACL8B,gBAAehC,EAAO,sBAAmBiC,EACzCC,gBAAc,OACdN,UAAW/B,EAAQN,cACnB4C,QAtDa,WACnBlC,GAAQ,SAACwB,GAAD,OAAeA,YAwDYQ,GAA3BrC,EAAMwC,SAAStB,SACb,UAEFlB,EAAMwC,SAAStB,UAGnB,kBAACuB,EAAA,EAAD,CACET,UAAW/B,EAAQJ,YACnBO,KAAMA,EACNsC,SAAUpC,EAAUK,QACpBgC,UAAMN,EACNO,YAAU,EACVC,eAAa,IACZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,EAAA,EAAD,iBACMF,EADN,CAEEG,MAAO,CAAEC,gBAA+B,WAAdH,EAAyB,aAAe,mBAElE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBC,YAAa7C,GAC9B,kBAAC8C,EAAA,EAAD,CAAUC,cAAenD,EAAMoD,GAAG,iBAAiBC,UAAW/B,GAC5D,kBAACgC,EAAA,EAAD,CAAUnB,QAAS/B,GAAnB,WACA,kBAACkD,EAAA,EAAD,CAAUnB,QAASzB,GAAnB,mB,oGC7GP6C,EAAU,wBCiBjBrE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoE,iBAAkB,CAChBC,YAAa,QAEfC,eAAgB,CACdC,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BC,cAAe,CACbvE,QAAS,OACTqE,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BE,aAAc,CACZtE,MAAO,UACPmE,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BG,eAAgB,CACdrE,OAAQ,IACRsE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,QACXC,WAAY,aAID,SAASC,EAAYzE,GAElC,IAAMC,EAAUX,IAFyB,EAIXY,IAAMC,UAAS,GAJJ,mBAIlCuE,EAJkC,KAIzBC,EAJyB,OAKCzE,IAAMC,UAAS,GALhB,gCAMED,IAAMC,UAAS,IANjB,mBAMlCyE,EANkC,KAMfC,EANe,OAOQ3E,IAAMC,UAAS,GAPvB,mBAOlC2E,EAPkC,KAOZC,EAPY,OASM7E,IAAMC,SAAS,IATrB,mBASlC6E,EATkC,KASdC,EATc,OAUO/E,IAAMC,SAAS,IAVtB,mBAUlC+E,EAVkC,KAUhBC,EAVgB,OAWTjF,IAAMC,SAAS,IAXN,mBAWlCiF,EAXkC,KAWxBC,EAXwB,KAanCC,EAAapF,IAAMK,SACnBgF,EAAgBrF,IAAMK,SAGtBiF,EAAuB,WACvBF,EAAW3E,QAAQ8E,MAAMC,OAAS,GACpCC,QAAQC,IAAI,kBACZf,GAAc,GACdI,EAAiB,2BAEjBJ,GAAc,GACdI,EAAiB,MAIfY,EAA0B,WAC1BN,EAAc5E,QAAQ8E,MAAMC,OAAS,GACvCC,QAAQC,IAAI,qBACZb,GAAiB,GACjBI,EAAoB,8BAEpBJ,GAAiB,GACjBI,EAAoB,MAclBW,EAAgB,uCAAG,WAAO/E,GAAP,SAAAgF,EAAA,sDACvB/F,EAAMgG,aACNhG,EAAMQ,cAFiB,2CAAH,sDAKhByF,EAAkB,uCAAG,WAAOlF,GAAP,2BAAAgF,EAAA,yDAEzBP,IACAK,IACAR,EAAY,MACRC,EAAW3E,QAAQ8E,MAAMC,OAAS,GAAKH,EAAc5E,QAAQ8E,MAAMC,OAAS,GALvD,wBAQjBQ,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,UAAalB,EAAW3E,QAAQ8E,MAChC,aAAgBF,EAAc5E,QAAQ8E,SAhBnB,SAqBrBd,GAAW,GArBU,SAsBE8B,MAAM9C,EAAU,cAAeuC,GAtBjC,YAsBfQ,EAtBe,QAuBRC,GAvBQ,kCAwBID,EAASE,OAxBb,SAwBbC,EAxBa,QAyBNC,WAEL7F,EAAS4F,EAAS5F,OAClBC,EAAW2F,EAAS3F,SACpBC,EAAYmE,EAAW3E,QAAQ8E,MAErCzF,EAAMgB,YAAY,CAChBC,OAAQA,EACRC,SAAUA,EACVC,UAAWA,KAIPC,EAAU,IAAIX,KACZsG,IAAI,SAAU9F,EAAQ,CAAEK,KAAM,MACtCF,EAAQ2F,IAAI,WAAY7F,EAAU,CAAEI,KAAM,MAC1CF,EAAQ2F,IAAI,YAAa5F,EAAW,CAAEG,KAAM,MAC5CtB,EAAMQ,eAEN6E,EAAYwB,EAASzB,UA5CJ,0DAiDrB4B,MAAM,eAAD,MAjDgB,yBAoDrBrC,GAAW,GApDU,6EAAH,sDAyDxB,OACE,6BACE,kBAACsC,EAAA,EAAD,CAAQ7G,KAAMJ,EAAMkH,OAAQC,QAASnH,EAAMQ,YAAa4G,kBAAgB,qBACtE,kBAACC,EAAA,EAAD,CACEC,GAAI5C,EACJ6C,eAAa,GAEb,kBAACC,EAAA,EAAD,CAAkBxF,UAAW/B,EAAQkE,kBAEvC,kBAACsD,EAAA,EAAD,CAAajE,GAAG,qBAAhB,SACA,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAUvC,EACVvB,OAAO,QACPP,GAAG,QACHsE,MAAM,gBACNC,KAAK,QACLC,QAAQ,WACRC,WAAS,EACTC,MAAOtD,EACPuD,WAAYnD,EACZhD,UAAW/B,EAAQ6D,eACnBsE,OA7Fe,WACvB5C,OA8FM,kBAACmC,EAAA,EAAD,CACEE,SAAUtC,EACVxB,OAAO,QACPP,GAAG,WACHsE,MAAM,WACNC,KAAK,WACLC,QAAQ,WACRC,WAAS,EACTC,MAAOpD,EACPqD,WAAYjD,EACZlD,UAAW/B,EAAQ6D,eACnBsE,OAtGkB,WAC1BvC,OAuGM,kBAACwC,EAAA,EAAD,CAAYrG,UAAW/B,EAAQiE,cAC5BkB,IAGL,kBAACkD,EAAA,EAAD,CAAetG,UAAW/B,EAAQgE,eAChC,kBAAChC,EAAA,EAAD,CAAQM,QAASuD,EAAkBlG,MAAM,UAAUoC,UAAW/B,EAAQ2D,kBAAtE,WAGA,kBAAC3B,EAAA,EAAD,CAAQ+F,QAAQ,YAAYzF,QAAS0D,EAAoBrG,MAAM,WAA/D,YCzLV,IAAMN,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,eAAgB,CACdC,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BC,cAAe,CACbvE,QAAS,OACTqE,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BG,eAAgB,CACdrE,OAAQ,IACRsE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,QACXC,WAAY,aAID,SAAS+D,EAAavI,GAEnC,IAAMC,EAAUX,IAF0B,EAIZY,IAAMC,UAAS,GAJH,mBAInCuE,EAJmC,KAI1BC,EAJ0B,OAMDzE,IAAMC,UAAS,GANd,mBAMnCqI,EANmC,KAMjBC,EANiB,OAOCvI,IAAMC,UAAS,GAPhB,mBAOnCyE,EAPmC,KAOhBC,EAPgB,OAQO3E,IAAMC,UAAS,GARtB,mBAQnC2E,EARmC,KAQbC,EARa,OAUG7E,IAAMC,SAAS,IAVlB,mBAUnCuI,EAVmC,KAUhBC,EAVgB,OAWKzI,IAAMC,SAAS,IAXpB,mBAWnC6E,EAXmC,KAWfC,EAXe,OAYM/E,IAAMC,SAAS,IAZrB,mBAYnC+E,EAZmC,KAYjBC,EAZiB,KAcpCyD,EAAY1I,IAAMK,SAClB+E,EAAapF,IAAMK,SACnBgF,EAAgBrF,IAAMK,SAEtBsI,EAAsB,WACtBD,EAAUjI,QAAQ8E,MAAMC,OAAS,GACnCC,QAAQC,IAAI,iBACZ6C,GAAa,GACbE,EAAgB,0BAEhBF,GAAa,GACbE,EAAgB,MAIdnD,EAAuB,WACvBF,EAAW3E,QAAQ8E,MAAMC,OAAS,GACpCC,QAAQC,IAAI,kBACZf,GAAc,GACdI,EAAiB,2BAEjBJ,GAAc,GACdI,EAAiB,MAIfY,EAA0B,WAC1BN,EAAc5E,QAAQ8E,MAAMC,OAAS,GACvCC,QAAQC,IAAI,qBACZb,GAAiB,GACjBI,EAAoB,8BAEpBJ,GAAiB,GACjBI,EAAoB,MAwBlB2D,EAAmB,uCAAG,WAAO/H,GAAP,mBAAAgF,EAAA,yDAC1B8C,IACArD,IACAK,MAEI+C,EAAUjI,QAAQ8E,MAAMC,OAAS,GACnCJ,EAAW3E,QAAQ8E,MAAMC,OAAS,GAClCH,EAAc5E,QAAQ8E,MAAMC,OAAS,GAPb,wBASlBQ,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,SAAYoC,EAAUjI,QAAQ8E,MAC9B,UAAaH,EAAW3E,QAAQ8E,MAChC,aAAgBF,EAAc5E,QAAQ8E,SAlBlB,SAuBtBd,GAAW,GAvBW,SAwBC8B,MAAM9C,EAAU,eAAgBuC,GAxBjC,YAwBhBQ,EAxBgB,QAyBTC,GAzBS,kCA0BGD,EAASE,OA1BZ,SA0BdC,EA1Bc,QA2BPC,WAhCnB9G,EAAM+I,iBAAiB,oBACvB/I,EAAMgJ,oBACNhJ,EAAMQ,eAiCEwG,MAAMH,EAASzB,UA9BG,0DAmCtB4B,MAAM,eAAD,MAnCiB,yBAsCtBrC,GAAW,GAtCW,6EAAH,sDA4CzB,OACE,6BACE,kBAACsC,EAAA,EAAD,CAAQ7G,KAAMJ,EAAMkH,OAAQC,QAASnH,EAAMQ,YAAa4G,kBAAgB,qBACtE,kBAACC,EAAA,EAAD,CACEC,GAAI5C,EACJ6C,eAAa,GAEb,kBAACC,EAAA,EAAD,CAAkBxF,UAAW/B,EAAQkE,kBAEvC,kBAACsD,EAAA,EAAD,CAAajE,GAAG,qBAAhB,UACA,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAUe,EACV7E,OAAO,QACPP,GAAG,OACHsE,MAAM,YACNC,KAAK,OACLC,QAAQ,WACRC,WAAS,EACTC,MAAOM,EACPL,WAAYO,EACZ1G,UAAW/B,EAAQ6D,eACnBsE,OArFc,WACtBS,OAsFM,kBAAClB,EAAA,EAAD,CACEE,SAAUvC,EACVvB,OAAO,QACPP,GAAG,QACHsE,MAAM,gBACNC,KAAK,QACLC,QAAQ,WACRC,WAAS,EACTC,MAAOtD,EACPuD,WAAYnD,EACZhD,UAAW/B,EAAQ6D,eACnBsE,OA9Fe,WACvB5C,OA+FM,kBAACmC,EAAA,EAAD,CACEE,SAAUtC,EACVxB,OAAO,QACPP,GAAG,WACHsE,MAAM,WACNC,KAAK,WACLC,QAAQ,WACRC,WAAS,EACTC,MAAOpD,EACPqD,WAAYjD,EACZlD,UAAW/B,EAAQ6D,eACnBsE,OAvGkB,WAC1BvC,QAyGI,kBAACyC,EAAA,EAAD,CAAetG,UAAW/B,EAAQgE,eAChC,kBAAChC,EAAA,EAAD,CAAQ+F,QAAQ,YAAYzF,QAASuG,EAAqBlJ,MAAM,WAAhE,cChMV,IAAMN,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyJ,QAAS,CACPC,UAAW,SACXnF,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,QAIjB,SAASmF,EAAcnJ,GAEpC,IAAMC,EAAUX,IAEhB,OACE,6BACE,kBAAC2H,EAAA,EAAD,CAAQ7G,KAAMJ,EAAMkH,OAAQC,QAASnH,EAAMQ,YAAa4G,kBAAgB,qBAErD,MAAfpH,EAAMoJ,OACN,kBAAC3B,EAAA,EAAD,KAAczH,EAAMoJ,OAEtB,kBAAC1B,EAAA,EAAD,KACE,kBAACW,EAAA,EAAD,CAAYrG,UAAW/B,EAAQgJ,SAC5BjJ,EAAMiJ,YClBnB,IAAM3J,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ4J,SAAU,GAEZC,YAAa,CACXzF,YAAarE,EAAMwE,QAAQ,IAE7BuF,aAAc,CACZ/E,WAAY,OACZ9E,QAAS,mBAIE,SAAS8J,EAAUxJ,GAEhC,IAAMC,EAAUX,IAFuB,EAGSY,IAAMC,UAAS,GAHxB,mBAGhCsJ,EAHgC,KAGbC,EAHa,OAIWxJ,IAAMC,UAAS,GAJ1B,mBAIhCwJ,EAJgC,KAIZC,EAJY,OAKa1J,IAAMC,UAAS,GAL5B,mBAKhC0J,EALgC,KAKXC,EALW,OAMG5J,IAAMC,SAAS,IANlB,mBAMhC4J,EANgC,KAMjBhB,EANiB,KAgCvC,OACE,yBAAK/G,UAAW/B,EAAQR,MACtB,kBAACuK,EAAA,EAAD,CAAQ5F,SAAS,UACf,kBAACK,EAAD,CACEyC,OAAQuC,EACRjJ,YAzBuB,WAC7BkJ,GAAmB,IAyBb1I,YAAahB,EAAMgB,YACnBgF,WAvBuB,WAC7B4D,GAAoB,MAwBhB,kBAACrB,EAAD,CACErB,OAAQyC,EACRnJ,YAvBwB,WAC9BoJ,GAAoB,IAuBdb,iBAAkBA,EAClBC,kBArBwB,WAC9Bc,GAAqB,MAuBjB,kBAACX,EAAD,CACEjC,OAAQ2C,EACRrJ,YAtByB,WAC/BsJ,GAAqB,IAsBfb,QAASc,IAGX,kBAACE,EAAA,EAAD,KACE,kBAAChI,EAAA,EAAD,CAAQD,UAAW/B,EAAQqJ,YAAa1J,MAAM,UAAUsK,KAAK,SAA7D,YAGA,6BAASlI,UAAW/B,EAAQsJ,mBAEIlH,GAA5BrC,EAAMwC,SAASrB,UAEb,kBAACc,EAAA,EAAD,CAAQrC,MAAM,UAAU2C,QAAS,SAACxB,GArD9C2I,GAAmB,KAqDP,SAIA,kBAAC3J,EAAD,CACEiB,YAAahB,EAAMgB,YACnBwB,SAAUxC,EAAMwC,e,qBC1E5BlD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,eAAgB,CACdC,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BC,cAAe,CACbvE,QAAS,OACTqE,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BE,aAAc,CACZtE,MAAO,UACPmE,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BG,eAAgB,CACdrE,OAAQ,IACRsE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,QACXC,WAAY,aAID,SAAS2F,EAAsBnK,GAE5C,IAAMC,EAAUX,IAFmC,EAIrBY,IAAMC,UAAS,GAJM,mBAI5CuE,EAJ4C,aAKTxE,IAAMC,UAAS,IALN,gCAMVD,IAAMC,UAAS,IANL,mBAM5CqI,EAN4C,KAM1BC,EAN0B,OAQNvI,IAAMC,SAAS,IART,mBAQ5CuI,EAR4C,KAQzBC,EARyB,OASnBzI,IAAMC,SAAS,IATI,mBAS5CiF,EAT4C,KASlCC,EATkC,KAW7CuD,EAAY1I,IAAMK,SAGlBsI,EAAsB,WACtBD,EAAUjI,QAAQ8E,MAAMC,OAAS,GACnC+C,GAAa,GACbE,EAAgB,sCAEhBF,GAAa,GACbE,EAAgB,MAUdyB,EAAmB,uCAAG,WAAOrJ,GAAP,SAAAgF,EAAA,sDAE1B8C,IACAxD,EAAY,IACRuD,EAAUjI,QAAQ8E,MAAMC,OAAS,GACnC1F,EAAMqK,mBAAmBzB,EAAUjI,QAAQ8E,OALnB,2CAAH,sDASzB,OACE,6BACE,kBAACwB,EAAA,EAAD,CAAQ7G,KAAMJ,EAAMkH,OAAQC,QAASnH,EAAMQ,YAAa4G,kBAAgB,qBACtE,kBAACC,EAAA,EAAD,CACEC,GAAI5C,EACJ6C,eAAa,GAEb,kBAACC,EAAA,EAAD,CAAkBxF,UAAW/B,EAAQkE,kBAEvC,kBAACsD,EAAA,EAAD,CAAajE,GAAG,qBAAhB,wBACA,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAUe,EACV7E,OAAO,QACPP,GAAG,gBACHsE,MAAM,iBACNC,KAAK,OACLC,QAAQ,WACRC,WAAS,EACTC,MAAOM,EACPL,WAAYO,EACZ1G,UAAW/B,EAAQ6D,eACnBsE,OApCc,WACtBS,OAqCM,kBAACR,EAAA,EAAD,CAAYrG,UAAW/B,EAAQiE,cAC5BkB,IAGL,kBAACkD,EAAA,EAAD,CAAetG,UAAW/B,EAAQgE,eAChC,kBAAChC,EAAA,EAAD,CAAQ+F,QAAQ,YAAYzF,QAAS6H,EAAqBxK,MAAM,WAAhE,a,2DCrGJN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8K,aAAc,CACZC,aAAc,gBAIH,SAASC,GAAcxK,GAMpC,IAAMC,EAAUX,KAYhB,OACE,kBAACmL,EAAA,EAAD,CAAUC,QAAM,EAACC,WAAW,aAAapI,QAPnB,WACtBoD,QAAQC,IAAI5F,EAAM4K,eAClB5K,EAAM6K,qBAAqB7K,EAAM4K,iBAM/B,kBAACE,EAAA,EAAD,CAAc7K,QAAS,CAAE8K,QAAS9K,EAAQqK,cAAgBS,QAAS/K,EAAMgL,YAAaC,UAAWjL,EAAM4K,gBACvG,kBAACM,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAAS7I,QAbnB,WAC1BvC,EAAMqL,oBAAoBrL,EAAMsL,aAa5B,kBAAC,KAAD,Q,uBCnBFhM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+L,eAAgB,CACdxH,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BwH,cAAe,CACbtC,UAAW,WAEbuC,UAAW,CACT1H,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,GAC5BtE,QAAS,eAEXgM,WAAY,CACVlH,WAAY,OACZmH,OAAQ,OACRC,MAAO,QAETC,UAAW,CACT9H,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,GAC5BkF,UAAW,UAEb4C,eAAgB,CACd1H,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,QAwFFuH,OAnFf,SAA2B/L,GACzB,IAAMC,EAAUX,KAMV+L,EAAsB,SAAC7H,GAC3B,IAAIwI,EAAiBC,MAAMC,KAAKlM,EAAMgM,gBAClCG,EAAQH,EAAeI,WAAU,SAAAC,GAAC,OAAIA,EAAEf,YAAc9H,KAC1D,IAAe,IAAX2I,EAAc,CAChBH,EAAeM,OAAOH,EAAO,GAC7B,IAAII,EAAqBP,EAAeQ,KAAI,SAASC,EAAMN,EAAOO,GAChE,OAAOD,EAAK7B,iBAEd5K,EAAM2M,kBAAkBJ,KAItB1B,EAAuB,SAAC+B,GAC5BjH,QAAQC,IAAIgH,GACRA,IAAW5M,EAAM6M,sBACnB7M,EAAM8M,wBAAwBF,IAI5BG,EAAY,SAAC/M,GAAW,IACpBgN,EAAuBhN,EAAvBgN,KAAMb,EAAiBnM,EAAjBmM,MAAOlJ,EAAUjD,EAAViD,MACfgK,EAAUD,EAAKb,GACrB,OACE,yBAAKlJ,MAAOA,GAER,kBAACuH,GAAD,CACEQ,YAAaiC,EAAQjC,YACrBJ,cAAeqC,EAAQrC,cACvBU,UAAW2B,EAAQ3B,UACnBD,oBAAqBA,EACrBR,qBAAsBA,MAQhC,OACE,kBAACqC,EAAA,EAAD,CAAKlL,UAAW/B,EAAQsL,eAAgB4B,UAAWC,IAAMC,WAAS,EAACC,UAAU,UAC3E,kBAACF,EAAA,EAAD,CAAMX,MAAI,EAACzK,UAAW/B,EAAQwL,WAC5B,kBAACpD,EAAA,EAAD,CAAYL,QAAQ,MAApB,UAGA,kBAAC/F,EAAA,EAAD,CACED,UAAW/B,EAAQyL,WACnB1D,QAAQ,WACRuF,SAAUvN,EAAMwN,kBAChBjL,QApDkB,WACxBvC,EAAMyN,kBAqDCzN,EAAMwN,kBACL,kBAAChG,EAAA,EAAD,CAAkB0C,KAAM,GAAIlI,UAAW/B,EAAQ6L,iBAE/C,SAIN,kBAAC4B,GAAA,EAAD,MACE1N,EAAMgM,eAAetG,OAAS,EAChC,kBAAC,KAAD,CACEiG,OAAQ,IACRgC,SAAU,GACVC,UAAW5N,EAAMgM,eAAetG,OAChCmI,SAAU7N,EAAMgM,gBAEfe,GAGH,kBAAC1E,EAAA,EAAD,CAAYrG,UAAW/B,EAAQ4L,WAA/B,6BCpHAvM,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,GACFkM,OAAQ,QACRmC,QAAStO,EAAMwE,QAAQ,EAAG,EAAG,GAC7BqF,SAAU,GAHR,cAID7J,EAAMuO,YAAYC,GAAG,MAAQ,CAC5BpC,MAAO,SALP,cAODpM,EAAMuO,YAAYC,GAAG,MAAQ,CAC5BpC,MAAO,SARP,cAUDpM,EAAMuO,YAAYC,GAAG,MAAQ,CAC5BpC,MAAO,SAXP,yBAaQ,SAbR,uBAcM,MAdN,2BAeU,SAfV,OAmBS,SAASqC,GAAmBjO,GACzC,IAAMC,EAAUX,KAEhB,OACE,kBAAC4N,EAAA,EAAD,CAAKlL,UAAW/B,EAAQR,KAAMyO,UAAW,GACvC,kBAAC,GAAD,CACElC,eAAgBhM,EAAMgM,eACtBW,kBAAmB3M,EAAM2M,kBACzBE,qBAAsB7M,EAAM6M,qBAC5BC,wBAAyB9M,EAAM8M,wBAC/BW,cAAezN,EAAMyN,cACrBD,kBAAmBxN,EAAMwN,qB,wBC9B3BlO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2O,UAAW,CACTzO,QAAS,OACTiL,WAAY,SACZyD,SAAU,SA4DCC,OAxDf,SAAwBrO,GAAQ,IAAD,EACHE,IAAMC,SAAS,MADZ,mBAGHmO,GAHG,UAGgDtO,EAArEuO,iBAAqEvO,EAAnDsO,aAAatC,EAAsChM,EAAtCgM,eAAgBW,EAAsB3M,EAAtB2M,kBACjD1M,EAAUX,KASVkP,EAAsB,SAACC,GAE3B,GADA9I,QAAQC,IAAI6I,GACwD,MAAhEzC,EAAe0C,MAAK,SAAArC,GAAC,OAAIA,EAAEf,YAAcmD,EAASnD,aACpDtL,EAAM2O,eAAe,SACrB3O,EAAM+I,iBAAiB,oCACvB/I,EAAMgJ,wBACD,CACL,IAAIuD,EAAqBP,EAAeQ,KAAI,SAASC,EAAMN,EAAOO,GAChE,OAAOD,EAAK7B,iBAEd+B,EAAkB,GAAD,mBAAKJ,GAAL,CAAyBkC,EAAS7D,iBACnD5K,EAAM2O,eAAe,WACrB3O,EAAM+I,iBAAiB,OAAS0F,EAASzD,YAAc,sBACvDhL,EAAMgJ,sBAIV,OACE,6BACE,kBAAC4F,GAAA,EAAD,CACEC,UAAQ,EACR7M,UAAW/B,EAAQkO,UACnB3K,GAAG,aACHsL,kBAAgB,EAChB5E,KAAK,QACL6E,SA7BkB,SAACrO,EAAO+N,GAC9BD,EAAoBC,IA6BhBO,QAASV,EACTW,eAAgB,SAACC,GAAD,OAAYA,EAAOlE,aACnCmE,cApCgB,SAACH,EAAD,GAA8B,IAAlBI,EAAiB,EAAjBA,WAChC,OAAOC,aAAYL,EAASI,EAAY,CAAEE,KAAM,CAAC,cAAe,mBAAoBC,MAAM,EAAG,KAoCzFC,YAAa,SAACC,GAAD,OACX,kBAAC9H,EAAA,EAAD,iBACM8H,EADN,CAEE3H,MAAM,cACN/D,OAAO,SACPiE,QAAQ,WACR0H,WAAU,2BAAOD,EAAOC,YAAd,IAA0B3H,KAAM,mB,yEC7ChDzI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXiQ,aAAc,CACZ/P,MAAO,WAETgQ,WAAY,CACV9P,OAAQ,MAEV+P,eAAgB,CACdC,aAAc,WAIH,SAASC,GAAqB/P,GAC3C,IAAMC,EAAUX,KADkC,EAE1BY,IAAMC,UAAS,GAFW,mBAE3CC,EAF2C,KAErCC,EAFqC,KAG5CC,EAAYJ,IAAMK,OAAO,MAUzBC,EAAc,SAACE,GACfJ,EAAUK,SAAWL,EAAUK,QAAQC,SAASF,EAAMG,SAG1DR,GAAQ,IAcJ2P,EAAyB,SAACjP,QACDsB,GAAzBrC,EAAMwC,SAASvB,QACjBjB,EAAM2O,eAAe,SACrB3O,EAAM+I,iBAAiB,sBACvB/I,EAAMgJ,qBAENhJ,EAAMiQ,kCAERzP,EAAYO,IAGRW,EAAoB,SAAChB,GACP,QAAdA,EAAMiB,MACRjB,EAAMkB,iBACNvB,GAAQ,KAKNwB,EAAW3B,IAAMK,OAAOH,GAC9BF,IAAM4B,WAAU,YACW,IAArBD,EAASlB,UAA6B,IAATP,GAC/BE,EAAUK,QAAQoB,QAEpBF,EAASlB,QAAUP,IAClB,CAACA,IAGJ,IAAM8P,EAAqBlQ,EAAMmQ,eAAe3D,KAAI,SAAC4D,GAAD,OAClD,kBAAC1M,EAAA,EAAD,CAAU/B,IAAKyO,EAAUC,YAAYC,WAAY/N,QAAS,SAACxB,IAxC9B,SAACA,EAAGyC,GACjCxD,EAAMuQ,4BAA4B/M,GAClCmC,QAAQC,IAAIpC,GACZ,IAAIgN,EAAkBxQ,EAAMmQ,eAAezB,MAAK,SAASjC,EAAMN,EAAOO,GACpE,OAAOD,EAAK4D,cAAgB7M,KAC3BgN,gBACHxQ,EAAM2M,kBAAkB6D,GACxBxQ,EAAMyQ,kBAAiB,GACvBjQ,EAAYO,GAgCsD2P,CAAuB3P,EAAGqP,EAAUC,eACpG,kBAAChI,EAAA,EAAD,CAAYL,QAAQ,UAAU2I,QAAM,GACjCP,EAAUQ,mBAKjB,OACE,yBAAK5O,UAAW/B,EAAQR,MACtB,kBAACoR,GAAA,EAAD,CAASzH,MAAM,oBACb,kBAAC8B,EAAA,EAAD,CACEC,KAAK,QACLnJ,UAAW/B,EAAQ6Q,WACnBvO,QApEa,WACnBvC,EAAMyQ,kBAAkBzQ,EAAM+Q,oBAoExBnR,MAAM,UACNwL,aAAW,QACX,kBAAC,KAAD,QAGJ,kBAACnJ,EAAA,EAAD,CACE+O,QAAS,kBAAC,KAAD,MACT7O,IAAK7B,EACL8B,gBAAehC,EAAO,sBAAmBiC,EACzCC,gBAAc,OACdN,UAAW/B,EAAQ0P,aACnBpN,QA5EwB,WAC5BlC,GAAQ,SAACwB,GAAD,OAAeA,OA6EnB,kBAACwG,EAAA,EAAD,CAAYL,QAAQ,UAAU2I,QAAM,QACEtO,GAAlCrC,EAAMiR,0BAAwE,GAA/BjR,EAAMmQ,eAAezK,OACpE,gBAEA1F,EAAMmQ,eAAezB,MAAK,SAASjC,EAAMN,EAAOO,GAC9C,OAAOD,EAAK4D,cAAgBrQ,EAAMiR,4BACjCL,gBAIT,kBAACnO,EAAA,EAAD,CACET,UAAW/B,EAAQ2P,WACnBxP,KAAMA,EACNsC,SAAUpC,EAAUK,QACpBgC,UAAMN,EACNO,YAAU,EACVC,eAAa,IACZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,EAAA,EAAD,iBACMF,EADN,CAEEG,MAAO,CAAEC,gBAA+B,WAAdH,EAAyB,aAAe,mBAElE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBC,YAAa7C,GAC9B,kBAAC8C,EAAA,EAAD,CAAUC,cAAenD,EAAMoD,GAAG,iBAAiBC,UAAW/B,GAC3DwO,EACD,kBAACxC,GAAA,EAAD,CAASwD,OAAK,EAAC/D,UAAU,OACzB,kBAACzJ,EAAA,EAAD,CAAUnB,QAASyN,GACjB,kBAAC3H,EAAA,EAAD,CAAYL,QAAQ,UAAU2I,QAAM,EAAC3O,UAAW/B,EAAQ4P,gBAAxD,wBAGA,kBAAC,KAAD,CAASsB,SAAS,QAAQnP,UAAW/B,EAAQ4P,0B,mEC3I3DvQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+E,WAAY,OACZ9E,QAAS,eAEX0R,QAAS,CACPC,cAAe,QAEjBC,MAAO,CACLxD,QAAStO,EAAMwE,QAAQ,QAIZ,SAASuN,GAAuBvR,GAC7C,IAAMC,EAAUX,KAiBhB,OACE,yBAAK0C,UAAW/B,EAAQR,MAStB,kBAACoR,GAAA,EAAD,CAASzH,MAAM,QACb,kBAAC8B,EAAA,EAAD,CACEC,KAAK,QACLvL,MAAM,UACN2C,QA7BkB,WAExBvC,EAAMwR,eX3BkB,IWuDlBpG,aAAW,aACX,kBAAC,KAAD,QAGJ,kBAACyF,GAAA,EAAD,CAASzH,MAAM,eACb,kBAAC8B,EAAA,EAAD,CACEC,KAAK,QACLvL,MAAM,UACN2C,QAjCyB,WAE/BvC,EAAMwR,eX/ByB,IW+DzBpG,aAAW,oBACX,kBAAC,KAAD,QAGJ,kBAACyF,GAAA,EAAD,CAASzH,MAAM,UACb,kBAAC8B,EAAA,EAAD,CACEC,KAAK,QACLvL,MAAM,UACN2C,QArCoB,WAE1BvC,EAAMwR,eXnCoB,IWuEpBpG,aAAW,gBACX,kBAAC,KAAD,S,cCnEJ9L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmM,MAAO,OAEPkC,QAAStO,EAAMwE,QAAQ,EAAG,EAAG,GAC7BkK,UAAW,iCAEbuD,YAAa,CACX/R,QAAS,mBAIE,SAASgS,GAAiB1R,GACvC,IAAMC,EAAUX,KAEhB,OACE,kBAAC8N,EAAA,EAAD,CACEpL,UAAW/B,EAAQR,KACnB4N,WAAS,EACTC,UAAU,MACVqE,QAAQ,aACRhH,WAAW,UAEX,kBAACyC,EAAA,EAAD,CAAMX,MAAI,EAACmF,GAAI,GAAIC,GAAI,EAAG7P,UAAW/B,EAAQwR,aAC3C,kBAAC1B,GAAD,CACEgB,kBAAmB/Q,EAAM+Q,kBACzBN,iBAAkBzQ,EAAMyQ,iBACxB9D,kBAAmB3M,EAAM2M,kBACzBwD,eAAgBnQ,EAAMmQ,eACtB2B,kBAAmB9R,EAAM8R,kBACzBb,yBAA0BjR,EAAMiR,yBAChCV,4BAA6BvQ,EAAMuQ,4BACnCN,gCAAiCjQ,EAAMiQ,gCACvCtB,eAAgB3O,EAAM2O,eACtB5F,iBAAkB/I,EAAM+I,iBACxBC,kBAAmBhJ,EAAMgJ,kBACzBxG,SAAUxC,EAAMwC,WAGlB,kBAACuP,GAAA,EAAD,CAAQC,MAAI,GACV,kBAACT,GAAD,CACEU,kBAAkB,EAClBT,eAAgBxR,EAAMwR,mBAK5B,kBAACpE,EAAA,EAAD,CAAMX,MAAI,EAACY,WAAS,EAACuE,GAAI,GAAIC,GAAI,EAAGF,QAAU,UAC5C,kBAAC,GAAD,CACI3F,eAAgBhM,EAAMgM,eACtBW,kBAAmB3M,EAAM2M,kBACzB2B,YAAatO,EAAMsO,YACnBK,eAAgB3O,EAAM2O,eACtB5F,iBAAkB/I,EAAM+I,iBACxBC,kBAAmBhJ,EAAMgJ,qBAI/B,kBAAC+I,GAAA,EAAD,CAAQG,QAAM,GACZ,kBAAC9E,EAAA,EAAD,CAAMX,MAAI,EAACY,WAAS,EAACwE,GAAI,EAAGF,QAAU,UACpC,kBAACJ,GAAD,CACEC,eAAgBxR,EAAMwR,oB,wBC9D5BlS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmM,MAAO,OACP7H,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BmO,OAAQ,CACNzS,QAAS,eACTqE,OAAQ,QACRqO,UAAW,cAEbhJ,MAAO,CACL+H,SAAU,IAEZkB,IAAK,CACHC,aAAc,IAEhBC,SAAS,eACJ/S,EAAMgT,WAAWC,OAEtBC,YAAY,2BACPlT,EAAMgT,WAAWC,OADX,IAETE,gBAAiB,iCAIN,SAASC,GAAS5S,GAC/B,IAAMC,EAAUX,KACcW,EAAQkS,OAEtC,OACE,kBAACU,GAAA,EAAD,CAAM7Q,UAAW/B,EAAQR,KAAMuI,QAAQ,YACrC,kBAAC8K,GAAA,EAAD,KACE,kBAACzK,EAAA,EAAD,CAAYrG,UAAW/B,EAAQmJ,MAAOxJ,MAAM,gBAAgBmT,cAAY,GACrE/S,EAAMgL,aAET,kBAAC3C,EAAA,EAAD,CAAYL,QAAQ,KAAKmF,UAAU,MAChCnN,EAAMoJ,OAET,kBAACf,EAAA,EAAD,CAAYrG,UAAW/B,EAAQoS,IAAKzS,MAAM,iBACvCI,EAAMgT,MAET,kBAAC3K,EAAA,EAAD,CAAYL,QAAQ,QAAQmF,UAAU,UAChB9K,GAAnBrC,EAAMiT,WACL,6BACGjT,EAAMiT,UAAUzG,KAAI,SAACC,EAAMN,GAAP,OACnBM,EAAKyG,cACH,uBAAGvR,IAAKwK,EAAOnK,UAAW/B,EAAQyS,aAC/BjG,EAAK0G,MAGR,uBAAGxR,IAAKwK,EAAOnK,UAAW/B,EAAQsS,UAC/B9F,EAAK0G,aC3C1B,IAAM7T,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAEN+L,cAAe,CACbtC,UAAW,WAEbuC,UAAW,CACT1H,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,GAC5BtE,QAAS,eAEXgM,WAAY,CACVlH,WAAY,OACZmH,OAAQ,OACRC,MAAO,QAETC,UAAW,CACT9H,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,GAC5BkF,UAAW,UAEb4C,eAAgB,CACd1H,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,QAwBF4O,OAnBf,SAAkBpT,GAChB,IAAMC,EAAUX,KAEhB,OACE,kBAAC8N,EAAA,EAAD,CAAMpL,UAAW/B,EAAQR,KAAM4N,WAAS,EAACC,UAAU,UAChDtN,EAAMqT,SAAS7G,KAAI,SAAC8G,GAAD,OAClB,kBAACV,GAAD,CACEjR,IAAK2R,EAAK9P,GACVwP,KAAMM,EAAKN,KACX5J,MAAOkK,EAAKlK,MACZ4B,YAAasI,EAAKtI,YAClBiI,UAAWK,EAAKL,iBCjDpB3T,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+T,YAAa,CACXxP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BwP,aAAc,CACZzP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,QAIjB,SAASyP,GAAYzT,GAClC,IAAMC,EAAUX,KAEhB,OACE,yBAAK0C,UAAW/B,EAAQsT,aACtB,kBAAClL,EAAA,EAAD,CAAYrG,UAAW/B,EAAQuT,aAAcxL,QAAQ,MAArD,QAGA,kBAAC,GAAD,CACEqL,SAAUrT,EAAMqT,Y,aClBlB/T,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+T,YAAa,CACXxP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BwP,aAAc,CACZzP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,QAIjB,SAAS0P,GAAmB1T,GACzC,IAAMC,EAAUX,KAqEhB,OACE,yBAAK0C,UAAW/B,EAAQsT,aACtB,kBAAClL,EAAA,EAAD,CAAYrG,UAAW/B,EAAQuT,aAAcxL,QAAQ,MAArD,eAGA,kBAAC,QAAD,CAAMgF,KAzEG,CACX2G,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACE9L,MAAO,OACP+L,MAAM,EACNC,YAAa,GACbnB,gBAAiB,UACjBoB,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB5H,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAEjC,CACElF,MAAO,OACP+L,MAAM,EACNC,YAAa,GACbnB,gBAAiB,UACjBoB,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB5H,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACElF,MAAO,OACP+L,MAAM,EACNC,YAAa,GACbnB,gBAAiB,UACjBoB,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB5H,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,UC5EvC,IAAM1N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+T,YAAa,CACXxP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BwP,aAAc,CACZzP,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,QAIjB,SAAS0P,GAAmB1T,GACzC,IAAMC,EAAUX,KAuBhB,OACE,yBAAK0C,UAAW/B,EAAQsT,aACtB,kBAAClL,EAAA,EAAD,CAAYrG,UAAW/B,EAAQuT,aAAcxL,QAAQ,MAArD,oBAGA,kBAAC,OAAD,CAAKgF,KAzBI,CACX2G,OAAQ,CACN,OACA,OACA,QAEFC,SAAU,CAAC,CACT5G,KAAM,CAAC,GAAI,GAAI,IACf2F,gBAAiB,CACjB,UACA,UACA,WAEAkC,qBAAsB,CACtB,UACA,UACA,iB,cCrBAvV,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCsV,eAAa,GACXnJ,OAAQ,qBADG,wBAEPnM,EAAMuO,YAAYC,GAAG,MAFd,iCAEqD,CAC9DrC,OAAQ,sBAHC,cAKVnM,EAAMuO,YAAYC,GAAG,MAAQ,CAC5BrC,OAAQ,sBANC,wBAQF,QARE,8BASI,UATJ,GAWbvC,MAAO,CACLF,UAAW,UACXnF,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9B+Q,iBAAkB,CAChBC,KAAM,OACNC,UAAW,UAEbjK,YAAa,CACXjH,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,IAE9BkR,QAAS,CACPpV,OAAQ,UA8aGqV,OA1af,SAAuBnV,GACrB,IAAMC,EAAUX,KADY,EAGUY,IAAMC,SAAS,IAHzB,mBAGrBmO,EAHqB,KAGR8G,EAHQ,OAIIlV,IAAMC,SAAS,IAJnB,mBAIrBkT,EAJqB,KAIXgC,EAJW,OAKwBnV,IAAMC,SAAS,IALvC,mBAKrBmV,EALqB,KAKDC,EALC,OAMgBrV,IAAMC,SAAS,IAN/B,mBAMrBgQ,EANqB,KAML2B,EANK,OAOiB5R,IAAMC,SAAS,IAPhC,mBAOrB6L,EAPqB,KAOLwJ,EAPK,OAQQtV,IAAMC,UAAS,GARvB,mBAQrBsV,EARqB,KAQTC,EARS,OASkBxV,IAAMC,UAAS,GATjC,mBASrB4Q,EATqB,KASFN,EATE,OAUwBvQ,IAAMC,UAAS,GAVvC,mBAUrB0J,EAVqB,KAUAC,EAVA,OAWsB5J,IAAMC,UAAS,GAXrC,mBAWrBqN,EAXqB,KAWFmI,EAXE,OAYwBzV,IAAMC,UAAS,GAZvC,mBAYrByV,EAZqB,aAawC1V,IAAMC,UAAS,IAbvD,mBAarB0V,EAbqB,KAaQC,EAbR,QAcU5V,IAAMC,SAAS,IAdzB,qBAcrB4V,GAdqB,MAcRpH,GAdQ,SAeczO,IAAMC,SAAS,IAf7B,qBAerB4J,GAfqB,MAeNhB,GAfM,SAgBoC7I,IAAMC,SAAS,MAhBnD,qBAgBrB8Q,GAhBqB,MAgBKV,GAhBL,SAiB4BrQ,IAAMC,SAAS,QAjB3C,qBAiBrB0M,GAjBqB,MAiBCC,GAjBD,SAkBiB5M,IAAMC,SlB1DzB,GkBwCE,qBAkBrB6V,GAlBqB,MAkBDxE,GAlBC,MAuCtB7E,GAAoB,SAACsJ,GACzBtQ,QAAQC,IAAIqQ,GACZtQ,QAAQC,IAAI0P,GAEZ,IADA,IAAIY,EAAe,GACVC,EAAI,EAAGA,EAAIF,EAAavQ,OAAQyQ,IACvCD,EAAaE,KAAKd,EAAmBW,EAAaE,KAEpDxQ,QAAQC,IAAIsQ,GACZV,EAAmBU,IAGfG,GAA0B,WAC9BvM,GAAqB,IAWjBwM,GAAmC,WACvCR,GAA6B,IAgBzBS,GAAc,uCAAG,wCAAAxQ,EAAA,6DACfG,EAAU,CACdC,OAAQ,OAFW,SAMnBR,QAAQC,IAAI,2BANO,SAQIa,MAAM9C,EAAU,WAAYuC,GARhC,YAQbQ,EARa,QASNC,GATM,iCAUMD,EAASE,OAVf,OAajB,GAHMC,EAVW,OAWjBlB,QAAQC,IAAI,iBACZD,QAAQC,IAAIiB,GACRA,EAASC,UAAW,CAGtB,IAFI0P,EAAwB,GACxBC,EAAiB,GACZN,EAAI,EAAGA,EAAItP,EAASmG,KAAKtH,OAAQyQ,IAClCO,EAAa,CACjB,gBAAmB7P,EAASmG,KAAKmJ,GAAGQ,SACpC,YAAe9P,EAASmG,KAAKmJ,GAAGS,aAChC,cAAiB/P,EAASmG,KAAKmJ,GAAGvJ,OAClC,UAAa/F,EAASmG,KAAKmJ,GAAGU,KAEhCL,EAAsB3P,EAASmG,KAAKmJ,GAAGvJ,QAAU8J,EACjDD,EAAeL,KAAKM,GAEtBtB,EAAeqB,GACflB,EAAsBiB,QAEtBxP,MAAMH,EAASzB,UA7BA,0DAkCnBO,QAAQC,IAAI,4BAAZ,MAlCmB,sGAAH,qDAyCdkR,GAAO,uCAAG,WAAO9K,GAAP,mCAAAjG,EAAA,yDACVgR,EAAe/K,EAAeQ,KAAI,SAAUC,EAAMN,EAAOO,GAC3D,OAAOD,EAAKzB,eAGR9E,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,aAAgBuQ,KAZN,WAiBRA,EAAarR,OAAS,GAjBd,wBAkBVC,QAAQC,IAAI,mBAlBF,SAoBaa,MAAM9C,EAAU,QAASuC,GApBtC,YAoBJQ,EApBI,QAqBGC,GArBH,kCAsBeD,EAASE,OAtBxB,QAuBR,IADMC,EAtBE,QAuBKC,UAAW,CAEtB,IADIkQ,EAAc,GACTb,EAAI,EAAGA,EAAItP,EAASmG,KAAKtH,OAAQyQ,IAAK,CAE7C,IADIc,EAAa,GACRC,EAAI,EAAGA,EAAIrQ,EAASmG,KAAKmJ,GAAGlD,UAAUvN,OAAQwR,IACjDjE,EAAY,CACd,eAAiB,EACjB,KAAQpM,EAASmG,KAAKmJ,GAAGlD,UAAUiE,IAErCD,EAAWb,KAAKnD,GAElB,IAASiE,EAAI,EAAGA,EAAIrQ,EAASmG,KAAKmJ,GAAGgB,QAAQzR,OAAQwR,IACnDD,EAAWpQ,EAASmG,KAAKmJ,GAAGgB,QAAQD,IAApC,eAA2D,EAEzDE,EAAK,IAAIC,KAAKxQ,EAASmG,KAAKmJ,GAAGnD,MAC/BM,EAAO,CACT,KAAQ8D,EAAGE,cAAgB,KAAOF,EAAGG,WAAa,GAAK,IAAMH,EAAGI,UAChE,YAAe3Q,EAASmG,KAAKmJ,GAAGsB,QAChC,UAAaR,EACb,MAASpQ,EAASmG,KAAKmJ,GAAG/M,MAC1B,GAAMvC,EAASmG,KAAKmJ,GAAG3S,IAEzBwT,EAAYZ,KAAK9C,GAEnB3N,QAAQC,IAAIoR,GACZ3B,EAAY2B,QAEZhQ,MAAMH,EAASzB,UAlDT,0DAwDZO,QAAQC,IAAI,oBAAZ,MAxDY,sGAAH,sDA+DPyE,GAAkB,uCAAG,WAAOuG,GAAP,qBAAA7K,EAAA,6DACnBG,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,cAAiBoK,EACjB,OAAU5Q,EAAMwC,SAASvB,UATJ,kBAaAwF,MAAM9C,EAAU,oBAAqBuC,GAbrC,YAajBQ,EAbiB,QAcVC,GAdU,iCAeED,EAASE,OAfX,OAefC,EAfe,OAgBrBlB,QAAQC,IAAIiB,GACRA,EAASC,WAEP4Q,EAAe,CACjB,YAAe7Q,EAASmG,KAAKxJ,GAC7B,OAAUqD,EAASmG,KAAK2K,QACxB,cAAiB9Q,EAASmG,KAAK4K,eAC/B,gBAAmB/Q,EAASmG,KAAK6K,kBAEnC/F,EAAkB,GAAD,mBAAK3B,GAAL,CAAqBuH,KACtCpB,MAEAtP,MAAMH,EAASzB,UA5BI,0DAiCvB4B,MAAM,8BAAD,MAjCkB,0DAAH,sDAqClB8Q,GAAgB,uCAAG,sCAAA/R,EAAA,8DACM1D,GAAzBrC,EAAMwC,SAASvB,OADI,wBAEfiF,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,OAAUxG,EAAMwC,SAASvB,UATR,SAanB0E,QAAQC,IAAI,kCAbO,SAeIa,MAAM9C,EAAU,aAAcuC,GAflC,YAebQ,EAfa,QAgBNC,GAhBM,kCAiBMD,EAASE,OAjBf,QAmBjB,GAFMC,EAjBW,OAkBjBlB,QAAQC,IAAIiB,GACRA,EAASC,WAGX,GADA4O,GAAc,GACV7O,EAASmG,KAAKtH,OAAS,EAAG,CAG5B,IADIqS,EAAgB,GACX5B,EAAI,EAAGA,EAAItP,EAASmG,KAAKtH,OAAQyQ,IACpCuB,EAAe,CACjB,YAAe7Q,EAASmG,KAAKmJ,GAAG3S,GAChC,OAAUqD,EAASmG,KAAKmJ,GAAGwB,QAC3B,cAAiB9Q,EAASmG,KAAKmJ,GAAGyB,eAClC,gBAAmB/Q,EAASmG,KAAKmJ,GAAG0B,kBAEtCE,EAAc3B,KAAKsB,GAErB5F,EAAkBiG,SAQpB/Q,MAAMH,EAASzB,UACfsQ,GAAc,GA3CC,0DAgDnBA,GAAc,GACd/P,QAAQC,IAAI,4BAAZ,MAjDmB,sGAAH,qDAyDhB6H,GAAa,uCAAG,oCAAA1H,EAAA,8DACS1D,GAAzBrC,EAAMwC,SAASvB,OADC,wBAEd+W,EAAyBhM,EAAeQ,KAAI,SAAUC,EAAMN,EAAOO,GACrE,OAAOD,EAAK7B,iBAEdjF,QAAQC,IAAIoS,GACN9R,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,YAAeyK,GACf,gBAAmB+G,KAdL,SAkBhBrS,QAAQC,IAAI,0BAA4BqL,IACxCtL,QAAQC,IAAIM,GACZyP,GAAqB,GApBL,UAqBOlP,MAAM9C,EAAU,kBAAmBuC,GArB1C,aAqBVQ,EArBU,QAsBHC,GAtBG,kCAuBSD,EAASE,OAvBlB,SAuBRC,EAvBQ,QAwBDC,YAEPmR,EAAoBhM,MAAMC,KAAKiE,IACjB+H,SAAQ,SAAUzL,EAAMN,EAAOO,GAC3CD,EAAK4D,aAAeY,KACtBxE,EAAK+D,gBAAkBwH,MAG3BrS,QAAQC,IAAIqS,GACZnG,EAAkBmG,GAClBtJ,GAAe,WACf5F,GAAiB,+BACjBsN,MAEArP,MAAMH,EAASzB,UAtCH,0DA2ChBO,QAAQC,IAAI,4BAAZ,MA3CgB,yBA8ChB+P,GAAqB,GA9CL,kDAgDgBtT,GAAzBrC,EAAMwC,SAASvB,QACxB8H,GAAiB,sBACjBsN,WACqChU,GAA5B4O,KACTlI,GAAiB,0BACjBsN,MArDkB,gEAAH,qDAsFnB,OA7BAnW,IAAM4B,WAAU,WACd6D,QAAQC,IAAIoQ,MACX,CAACA,KAEJ9V,IAAM4B,WAAU,WACT2T,GACHc,UAE4BlU,IAA1BrC,EAAMwC,SAASvB,QACjB6W,OAED,CAAC9X,EAAMwC,WAEVtC,IAAM4B,WAAU,WACVqO,EAAezK,OAAS,QAAiCrD,GAA5B4O,KAC/BV,GAA4BJ,EAAe,GAAGE,aAC9C1D,GAAkBwD,EAAe,GAAGK,oBAErC,CAACL,IAEJjQ,IAAM4B,WAAU,WACd6D,QAAQC,IAAI,oBACUvD,GAAlB2J,GAA+BA,EAAetG,OAAS,IACzDC,QAAQC,IAAI,WAEZkR,GAAQ9K,MAET,CAACA,IAGF,yBAAKhK,UAAW/B,EAAQ6U,eACtB,kBAAC3L,EAAD,CACEjC,OAAQ2C,EACRrJ,YAzT2B,WAC/BsJ,GAAqB,IAyTjBV,MAAO2M,GACP9M,QAASc,KAGX,kBAACI,EAAD,CACEjD,OAAQ2O,EACRrV,YAAa8V,GACbnG,eAAgBA,EAChB2B,kBAAmBA,EACnBvB,4BAA6BA,GAC7BlG,mBAAoBA,GACpB7H,SAAUxC,EAAMwC,WAGlB,kBAACkP,GAAD,CACE1F,eAAgBA,EAChBW,kBAAmBA,GACnB2B,YAAaA,EACbK,eAAgBA,GAChB5F,iBAAkBA,GAClBgI,kBAAmBA,EACnBN,iBAAkBA,EAClBzH,kBAAmBqN,GACnBlG,eAAgBA,EAChB2B,kBAAmBA,EACnBb,yBAA0BA,GAC1BV,4BAA6BA,GAC7BN,gCAjVkC,WACtC6F,GAA6B,IAiVzBtT,SAAUxC,EAAMwC,SAChBgP,eAAgBA,KAGlB,kBAAC,KAAO2G,IAAR,CACEnW,UAAW/B,EAAQiV,QACnBkD,QAAS,SACTC,QAAStH,EAAoB,OAAS,SACtCuH,SA9XqB,CACzBlY,KAAM,CACJmY,QAAS,EACTlM,EAAG,EACHzJ,WAAY,CACV4V,SAAU,KAGdC,OAAQ,CACNF,QAAS,GACTlM,EAAG,QACHzJ,WAAY,CACV4V,SAAU,MAoXV,kBAACvK,GAAD,CACEjC,eAAgBA,EAChBW,kBAAmBA,GACnBE,qBAAsBA,GACtBC,wBAAyBA,GACzBW,cAAeA,GACfD,kBAAmBA,EACnBoI,mBAAoBA,KAIxB,kBAACxI,EAAA,EAAD,CAAMX,MAAI,EAACY,WAAS,EAACC,UAAU,MAAMqE,QAAQ,SAAShH,WAAW,UAAU3I,UAAW/B,EAAQ8U,kBAC5F,kBAAC3H,EAAA,EAAD,CAAMX,MAAI,EAACmF,GAAI,GAAI8G,GAAI,GAhWP,WACpB,OAAQ1C,IACN,KlB5GsB,EkB6GpB,OAAO,kBAACvC,GAAD,CAAaJ,SAAUA,IAChC,KlB7G6B,EkB8G3B,OAAO,kBAACK,GAAD,MACT,KlB9GwB,EkB+GtB,OAAO,kBAAC,GAAD,MACT,QACE,OAAO,kBAACD,GAAD,CAAaJ,SAAUA,KAwV3BsF,OC5bLrZ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJkM,OAAQ,QAEVvC,MAAO,CACLF,UAAW,UACXnF,OAAQvE,EAAMwE,QAAQ,EAAG,EAAG,QAsCjB4U,OAtBf,WACE,IAAM3Y,EAAUX,KAEV8B,EAAU,IAAIX,IAHP,EAImBP,IAAMC,SAAS,CAC7Cc,OAAQG,EAAQyX,IAAI,UACpB3X,SAAUE,EAAQyX,IAAI,YACtB1X,UAAWC,EAAQyX,IAAI,eAPZ,mBAINrW,EAJM,KAIIxB,EAJJ,KAWb,OADA2E,QAAQC,IAAIpD,GAEV,yBAAKR,UAAW/B,EAAQR,MACtB,kBAAC+J,EAAD,CAAWhH,SAAUA,EAAUxB,YAAaA,IAC5C,kBAAC,GAAD,CACEwB,SAAUA,M,UC7CHhD,GAFDsZ,aAAe,CAAEC,QALf,CACdhO,QAAS,CAAEiO,KAAM,WACjB/N,UAAW,CAAE+N,KAAM,YAGmBC,UADtB,wB,UCMEC,QACW,cAA7B3X,OAAOC,SAAS2X,UAEe,UAA7B5X,OAAOC,SAAS2X,UAEhB5X,OAAOC,SAAS2X,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAACC,GAAA,EAAD,CAAeha,MAAOA,IACpB,kBAAC,GAAD,QAGJia,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/R,GACLvC,QAAQuC,MAAMA,EAAMe,c","file":"static/js/main.d6c6d087.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  },\r\n  popperStyle: {\r\n    zIndex: '1400',\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const cookies = new Cookies();\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userId: null,\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userId', { path: '/' });\r\n    cookies.remove('userName', { path: '/' });\r\n    cookies.remove('userEmail', { path: '/' });\r\n\r\n    handleClose(e)\r\n    window.location.reload(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          {\r\n            props.userData.userName == undefined ? \r\n              \"Account\"\r\n            : \r\n            props.userData.userName\r\n          }\r\n        </Button>\r\n        <Popper \r\n          className={classes.popperStyle} \r\n          open={open} \r\n          anchorEl={anchorRef.current} \r\n          role={undefined} \r\n          transition \r\n          disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const BASEURL = \"http://127.0.0.1:5000\";\r\n\r\nexport const NEWS_SECTION = 0;\r\nexport const PERFORMANCE_SECTION = 1;\r\nexport const WEIGHT_SECTION = 2;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogLeftButton: {\r\n    marginRight: 'auto',\r\n  },\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function LoginDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [errorMsgIsShow, setErrorMsgShow] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const openSignupDialog = async (e) => {\r\n    props.openSignup();\r\n    props.handleClose();\r\n  }\r\n\r\n  const loginButtonOnClick = async (e) => {\r\n    // If no error in both textfield\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (emailInput.current.value.length > 0 && passwordInput.current.value.length > 0) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/login\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // Temp user name\r\n            const userId = jsonData.userId;\r\n            const userName = jsonData.userName;\r\n            const userEmail = emailInput.current.value;\r\n\r\n            props.setUserData({\r\n              userId: userId,\r\n              userName: userName,\r\n              userEmail: userEmail,\r\n            });\r\n\r\n            // Store user data into cookies\r\n            const cookies = new Cookies();\r\n            cookies.set('userId', userId, { path: '/' });\r\n            cookies.set('userName', userName, { path: '/' });\r\n            cookies.set('userEmail', userEmail, { path: '/' });\r\n            props.handleClose();\r\n          } else {\r\n            setErrorMsg(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMsg}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button onClick={openSignupDialog} color=\"primary\" className={classes.dialogLeftButton}>\r\n            Sign up\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={loginButtonOnClick} color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function SignupDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [nameInputIsError, setNameError] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [nameInputErrorMsg, setNameErrorMsg] = React.useState(\"\");\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n\r\n  const nameInput = React.useRef();\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n  const checkNameInputEmpty = () => {\r\n    if (nameInput.current.value.length < 1) {\r\n      console.log(\"Name is empty\")\r\n      setNameError(true);\r\n      setNameErrorMsg(\"Name cannot be empty\");\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const nameInputOnBlur = () => {\r\n    checkNameInputEmpty();\r\n  };\r\n\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const signUpSucceed = () => {\r\n    props.setDialogMessage(\"Sign up success!\");\r\n    props.openMessageDialog();\r\n    props.handleClose();\r\n  };\r\n\r\n  const signUpButtonOnClick = async (e) => {\r\n    checkNameInputEmpty();\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    // If no error in both textfield\r\n    if (nameInput.current.value.length > 0 &&\r\n      emailInput.current.value.length > 0 &&\r\n      passwordInput.current.value.length > 0) {\r\n\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userName': nameInput.current.value,\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/signup\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            signUpSucceed();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Signup</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={nameInput}\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"User Name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={nameInputIsError}\r\n            helperText={nameInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={nameInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button variant=\"contained\" onClick={signUpButtonOnClick} color=\"primary\">\r\n            Sign up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function MessageDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {\r\n          props.title != null && \r\n          <DialogTitle>{props.title}</DialogTitle>\r\n        }\r\n        <DialogContent>\r\n          <Typography className={classes.message}>\r\n            {props.message}\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport LoginDialog from './LoginDialog'\r\nimport SignupDialog from './SignupDialog'\r\nimport MessageDialog from './MessageDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isSignupDialogOpen, setSignupDialogOpen] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    setLoginDialogOpen(true);\r\n  };\r\n\r\n  const handleLoginDialogClose = () => {\r\n    setLoginDialogOpen(false);\r\n  };\r\n\r\n  const handleSignupDialogOpen = () => {\r\n    setSignupDialogOpen(true);\r\n  };\r\n\r\n  const handleSignupDialogClose = () => {\r\n    setSignupDialogOpen(false);\r\n  };\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <LoginDialog\r\n          isOpen={isLoginDialogOpen}\r\n          handleClose={handleLoginDialogClose}\r\n          setUserData={props.setUserData}\r\n          openSignup={handleSignupDialogOpen}>\r\n        </LoginDialog>\r\n        <SignupDialog\r\n          isOpen={isSignupDialogOpen}\r\n          handleClose={handleSignupDialogClose}\r\n          setDialogMessage={setDialogMessage}\r\n          openMessageDialog={handleMessageDialogOpen}\r\n        >\r\n        </SignupDialog>\r\n        <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          message={dialogMessage}\r\n        >\r\n        </MessageDialog> \r\n        <Toolbar>\r\n          <Button className={classes.brandButton} color=\"inherit\" size=\"large\">\r\n            AI Asset\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail == undefined\r\n                ?\r\n                <Button color=\"inherit\" onClick={(e) => { handleLoginDialogOpen() }}>\r\n                  Login\r\n                </Button>\r\n                :\r\n                <NavBarAccountButton \r\n                  setUserData={props.setUserData}\r\n                  userData={props.userData}\r\n                >\r\n                </NavBarAccountButton>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function CreatePortfolioDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [errorMsgIsShow, setErrorMsgShow] = React.useState(false);\r\n  const [nameInputIsError, setNameError] = React.useState(false);\r\n\r\n  const [nameInputErrorMsg, setNameErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n\r\n  const nameInput = React.useRef();\r\n\r\n\r\n  const checkNameInputEmpty = () => {\r\n    if (nameInput.current.value.length < 1) {\r\n      setNameError(true);\r\n      setNameErrorMsg(\"Portfolio's name cannot be empty\");\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const nameInputOnBlur = () => {\r\n    checkNameInputEmpty();\r\n  };\r\n\r\n  const createButtonOnClick = async (e) => {\r\n    // If no error in textfield\r\n    checkNameInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (nameInput.current.value.length > 0) {\r\n      props.createNewPortfolio(nameInput.current.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Create New Portfolio</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={nameInput}\r\n            margin=\"dense\"\r\n            id=\"portfolioName\"\r\n            label=\"Portfolio name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={nameInputIsError}\r\n            helperText={nameInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={nameInputOnBlur}\r\n          />\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMsg}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button variant=\"contained\" onClick={createButtonOnClick} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    textOverflow: 'ellipsis'\r\n  }\r\n}));\r\n\r\nexport default function StockListItem(props) {\r\n  /* \r\n    props data structure-\r\n      companyName(string): the name of the company, Ex: Apple Inc.\r\n      companySymbol(string): the symbol of the company in the market, Ex: NASDAQ: AAPL\r\n  */\r\n  const classes = useStyles();\r\n\r\n  const deleteButtonOnClick = () => {\r\n    props.removeSelectedStock(props.companyId);\r\n  };\r\n\r\n  const listItemOnClick = () => {\r\n    console.log(props.companySymbol);\r\n    props.stockListItemOnclick(props.companySymbol);\r\n  };\r\n\r\n\r\n  return (\r\n    <ListItem button alignItems=\"flex-start\" onClick={listItemOnClick}>\r\n      <ListItemText classes={{ primary: classes.listItemText }} primary={props.companyName} secondary={props.companySymbol} />\r\n      <IconButton edge=\"end\" aria-label=\"delete\" onClick={deleteButtonOnClick}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport StockListItem from './StockListItem'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stockComponent: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  listSubHeader: {\r\n    textAlign: 'initial'\r\n  },\r\n  listTitle: {\r\n    margin: theme.spacing(1, 1, 1),\r\n    display: \"inline-flex\"\r\n  },\r\n  saveButton: {\r\n    marginLeft: \"auto\",\r\n    height: \"36px\",\r\n    width: \"64px\"\r\n  },\r\n  emptyText: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    textAlign: 'center'\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  }\r\n}));\r\n\r\n\r\nfunction StockSelectedList(props) {\r\n  const classes = useStyles();\r\n\r\n  const saveButtonOnClick = () => {\r\n    props.savePortfolio();\r\n  }\r\n\r\n  const removeSelectedStock = (id) => {\r\n    var selectedStocks = Array.from(props.selectedStocks);\r\n    var index = selectedStocks.findIndex(x => x.companyId === id);\r\n    if (index !== -1) {\r\n      selectedStocks.splice(index, 1);\r\n      var newPortfolioStocks = selectedStocks.map(function(item, index, array){\r\n        return item.companySymbol;\r\n      });\r\n      props.setSelectedStocks(newPortfolioStocks);\r\n    }\r\n  };\r\n\r\n  const stockListItemOnclick = (symbol) => {\r\n    console.log(symbol);\r\n    if (symbol === props.currentSelectedStock) {\r\n      props.setCurrentSelectedStock(symbol);\r\n    }\r\n  }\r\n\r\n  const renderRow = (props) => {\r\n    const { data, index, style } = props;\r\n    const rowItem = data[index];\r\n    return (\r\n      <div style={style}>\r\n        {\r\n          <StockListItem\r\n            companyName={rowItem.companyName}\r\n            companySymbol={rowItem.companySymbol}\r\n            companyId={rowItem.companyId}\r\n            removeSelectedStock={removeSelectedStock}\r\n            stockListItemOnclick={stockListItemOnclick}\r\n          >\r\n          </StockListItem>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.stockComponent} component={Grid} container direction=\"column\">\r\n      <Grid item className={classes.listTitle}>\r\n        <Typography variant=\"h6\">\r\n          Stocks\r\n        </Typography>\r\n        <Button \r\n          className={classes.saveButton} \r\n          variant=\"outlined\"\r\n          disabled={props.saveButtonLoading}\r\n          onClick={saveButtonOnClick}\r\n        >\r\n          {props.saveButtonLoading ?\r\n            <CircularProgress size={24} className={classes.buttonProgress} />\r\n          :\r\n            \"Save\"\r\n          }\r\n        </Button>\r\n      </Grid>\r\n      <Divider></Divider>\r\n      { props.selectedStocks.length > 0 ?\r\n      <FixedSizeList\r\n        height={520}\r\n        itemSize={60}\r\n        itemCount={props.selectedStocks.length}\r\n        itemData={props.selectedStocks}\r\n      >\r\n        {renderRow}\r\n      </FixedSizeList >\r\n      :\r\n      <Typography className={classes.emptyText}>\r\n        This portfolio is empty\r\n      </Typography>\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StockSelectedList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockSelectedList from '../components/StockSelectedList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    padding: theme.spacing(1, 1, 1),\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '60vw',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50vw',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '25vw',\r\n    },\r\n    position: \"fixed\",\r\n    zIndex: 1400,\r\n    background: 'white'\r\n  },\r\n}));\r\n\r\nexport default function StockSelectSection(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root} boxShadow={1}>\r\n      <StockSelectedList\r\n        selectedStocks={props.selectedStocks}\r\n        setSelectedStocks={props.setSelectedStocks}\r\n        currentSelectedStock={props.currentSelectedStock}\r\n        setCurrentSelectedStock={props.setCurrentSelectedStock}\r\n        savePortfolio={props.savePortfolio}\r\n        saveButtonLoading={props.saveButtonLoading}\r\n      />\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport matchSorter from 'match-sorter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchBox: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 300,\r\n  },\r\n}));\r\n\r\nfunction StockSearchBox(props) {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const { additionalStyles, companyData, selectedStocks, setSelectedStocks } = props\r\n  const classes = useStyles();\r\n  const filterOptions = (options, { inputValue }) => {\r\n    return matchSorter(options, inputValue, { keys: ['companyName', 'companySymbol'] }).slice(0, 10);\r\n  };\r\n\r\n  const stockOnSelected = (event, newValue) => {\r\n    addStockToPortfolio(newValue);\r\n  };\r\n\r\n  const addStockToPortfolio = (newValue) => {\r\n    console.log(newValue)\r\n    if (selectedStocks.find(x => x.companyId === newValue.companyId) != null) {\r\n      props.setDialogTitle(\"Error\")\r\n      props.setDialogMessage(\"The stock is already in the list\");\r\n      props.openMessageDialog();\r\n    } else {\r\n      var newPortfolioStocks = selectedStocks.map(function(item, index, array){\r\n        return item.companySymbol;\r\n      });\r\n      setSelectedStocks([...newPortfolioStocks, newValue.companySymbol]);\r\n      props.setDialogTitle(\"Success\")\r\n      props.setDialogMessage(\"Add \" + newValue.companyName + \" to your portfolio\");\r\n      props.openMessageDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        freeSolo\r\n        className={classes.searchBox}\r\n        id=\"search-box\"\r\n        disableClearable\r\n        size=\"small\"\r\n        onChange={stockOnSelected}\r\n        options={companyData}\r\n        getOptionLabel={(option) => option.companyName}\r\n        filterOptions={filterOptions}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Add company\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockSearchBox;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  expandButton: {\r\n    color: 'inherit'\r\n  },\r\n  popperRoot: {\r\n    zIndex: 1400,\r\n  },\r\n  popperMenuItem: {\r\n    paddingRight: \"8px\"\r\n  },\r\n}));\r\n\r\nexport default function PortfolioMenuButtons(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const toogleDrawer = () => {\r\n    props.setSideBarExpand(!props.isSideBarExpanded);\r\n  };\r\n\r\n  const handlePortfolioToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const portfolioButtonOnClick = (e, id) => {\r\n    props.setCurrentSelectedPortfolio(id);\r\n    console.log(id);\r\n    var portfolioStocks = props.userPortfolios.find(function(item, index, array){\r\n      return item.portfolioId === id;\r\n    }).portfolioStocks;\r\n    props.setSelectedStocks(portfolioStocks);\r\n    props.setSideBarExpand(true);\r\n    handleClose(e)\r\n  }\r\n\r\n  const createPortfolioOnClick = (e) => {\r\n    if (props.userData.userId == undefined) {\r\n      props.setDialogTitle(\"Error\")\r\n      props.setDialogMessage(\"Please login first\");\r\n      props.openMessageDialog();\r\n    } else {\r\n      props.handleCreatePortfolioDialogOpen();\r\n    }\r\n    handleClose(e)\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n\r\n  const portfolioMenuItems = props.userPortfolios.map((portfolio) =>\r\n    <MenuItem key={portfolio.portfolioId.toString()} onClick={(e) => {portfolioButtonOnClick(e, portfolio.portfolioId)}}>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {portfolio.portfolioName}\r\n      </Typography>\r\n    </MenuItem>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip title=\"Portfolio Stocks\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          onClick={toogleDrawer}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Button\r\n        endIcon={<ExpandMoreIcon />}\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        className={classes.expandButton}\r\n        onClick={handlePortfolioToggle}\r\n      >\r\n        <Typography variant=\"inherit\" noWrap>\r\n          { props.currentSelectedPortfolio == undefined || props.userPortfolios.length == 0 ?\r\n            \"My Portfolios\"\r\n            :\r\n            props.userPortfolios.find(function(item, index, array){\r\n              return item.portfolioId === props.currentSelectedPortfolio;\r\n            }).portfolioName\r\n          }\r\n        </Typography>\r\n      </Button>\r\n      <Popper\r\n        className={classes.popperRoot}\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  {portfolioMenuItems}\r\n                  <Divider light component=\"li\" />\r\n                  <MenuItem onClick={createPortfolioOnClick}>\r\n                    <Typography variant=\"inherit\" noWrap className={classes.popperMenuItem}>\r\n                      Create New Portfolio\r\n                      </Typography>\r\n                    <AddIcon fontSize=\"small\" className={classes.popperMenuItem} />\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { NEWS_SECTION, PERFORMANCE_SECTION, WEIGHT_SECTION } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function PortfolioDetailButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  const newsButtonOnclick = () => {\r\n    //console.log(PERFORMANCE_SECTION);\r\n    props.setSectionCode(NEWS_SECTION);\r\n  }\r\n\r\n  const performanceButtonOnclick = () => {\r\n    //console.log(PERFORMANCE_SECTION);\r\n    props.setSectionCode(PERFORMANCE_SECTION);\r\n  }\r\n\r\n  const weightButtonOnclick = () => {\r\n    //console.log(WEIGHT_SECTION);\r\n    props.setSectionCode(WEIGHT_SECTION);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* {props.showSearchButton &&\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"expand search stock\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      } */}\r\n      <Tooltip title=\"News\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={newsButtonOnclick}\r\n          aria-label=\"show News\">\r\n          <ListAltIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Performance\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={performanceButtonOnclick}\r\n          aria-label=\"show performance\">\r\n          <ShowChartIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Weight\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={weightButtonOnclick}\r\n          aria-label=\"asset weight\">\r\n          <BarChartIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport StockSearchBox from '../components/StockSearchBox'\r\nimport PortfolioMenuButtons from './PortfolioMenuButtons';\r\nimport PortfolioDetailButtons from './PortfolioDetailButtons';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // minHeight: '60px',\r\n    padding: theme.spacing(1, 2, 1),\r\n    boxShadow: '0 0 1px 1px rgba(0, 0, 0 ,.1)'\r\n  },\r\n  menuButtons: {\r\n    display: 'inline-flex'\r\n  }\r\n}));\r\n\r\nexport default function PortfolioToolBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} sm={3} className={classes.menuButtons}>\r\n        <PortfolioMenuButtons\r\n          isSideBarExpanded={props.isSideBarExpanded}\r\n          setSideBarExpand={props.setSideBarExpand}\r\n          setSelectedStocks={props.setSelectedStocks}\r\n          userPortfolios={props.userPortfolios}\r\n          setUserPortfolios={props.setUserPortfolios}\r\n          currentSelectedPortfolio={props.currentSelectedPortfolio}\r\n          setCurrentSelectedPortfolio={props.setCurrentSelectedPortfolio}\r\n          handleCreatePortfolioDialogOpen={props.handleCreatePortfolioDialogOpen}\r\n          setDialogTitle={props.setDialogTitle}\r\n          setDialogMessage={props.setDialogMessage}\r\n          openMessageDialog={props.openMessageDialog}\r\n          userData={props.userData}\r\n        >\r\n        </PortfolioMenuButtons>\r\n        <Hidden smUp>\r\n          <PortfolioDetailButtons\r\n            showSearchButton={true}\r\n            setSectionCode={props.setSectionCode}\r\n          >\r\n          </PortfolioDetailButtons>\r\n        </Hidden>\r\n      </Grid>\r\n      <Grid item container xs={12} sm={6} justify = \"center\" >\r\n        <StockSearchBox\r\n            selectedStocks={props.selectedStocks} \r\n            setSelectedStocks={props.setSelectedStocks}\r\n            companyData={props.companyData}\r\n            setDialogTitle={props.setDialogTitle}\r\n            setDialogMessage={props.setDialogMessage}\r\n            openMessageDialog={props.openMessageDialog}\r\n          >\r\n        </StockSearchBox>\r\n      </Grid>\r\n      <Hidden xsDown>\r\n        <Grid item container sm={3} justify = \"center\" >\r\n          <PortfolioDetailButtons\r\n            setSectionCode={props.setSectionCode}\r\n          >\r\n          </PortfolioDetailButtons>\r\n        </Grid>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  sentence: {\r\n    ...theme.typography.body1,\r\n  },\r\n  keySentence: {\r\n    ...theme.typography.body1,\r\n    backgroundColor: \"rgba(255, 229, 100, 0.2)\"\r\n  },\r\n}));\r\n\r\nexport default function NewsCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.companyName}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {props.date}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.paragraph != undefined &&\r\n            <div>\r\n              {props.paragraph.map((item, index) =>\r\n                item.isKeySentence ?\r\n                  <p key={index} className={classes.keySentence}>\r\n                    {item.text}\r\n                  </p>\r\n                  :\r\n                  <p key={index} className={classes.sentence}>\r\n                    {item.text}\r\n                  </p>\r\n              )}\r\n            </div>\r\n          }\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport NewsCard from './NewsCard';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  listSubHeader: {\r\n    textAlign: 'initial'\r\n  },\r\n  listTitle: {\r\n    margin: theme.spacing(1, 1, 1),\r\n    display: \"inline-flex\"\r\n  },\r\n  saveButton: {\r\n    marginLeft: \"auto\",\r\n    height: \"36px\",\r\n    width: \"64px\"\r\n  },\r\n  emptyText: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    textAlign: 'center'\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  }\r\n}));\r\n\r\n\r\nfunction NewsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid className={classes.root} container direction=\"column\">\r\n      {props.newsData.map((news) => (\r\n        <NewsCard \r\n          key={news.id} \r\n          date={news.date}\r\n          title={news.title}\r\n          companyName={news.companyName}\r\n          paragraph={news.paragraph}\r\n        >\r\n        </NewsCard>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NewsList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NewsList from '../components/NewsList'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionRoot: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  sectionTitle: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function NewsSection(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.sectionRoot}>\r\n      <Typography className={classes.sectionTitle} variant=\"h5\">\r\n        News\r\n      </Typography>\r\n      <NewsList\r\n        newsData={props.newsData}\r\n      >\r\n      </NewsList>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BASEURL } from '../Constants';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionRoot: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  sectionTitle: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function PerformanceSection(props) {\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        label: 'GOOG',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: '#FF6384',\r\n        borderColor: '#FF6384',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#FF6384',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#FF6384',\r\n        pointHoverBorderColor: '#FF6384',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [40, 59, 80, 61, 70, 90, 100]\r\n      },\r\n      {\r\n        label: 'APPL',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: '#36A2EB',\r\n        borderColor: '#36A2EB',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#36A2EB',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#36A2EB',\r\n        pointHoverBorderColor: '#36A2EB',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [50, 29, 30, 58, 65, 75, 67]\r\n      },\r\n      {\r\n        label: 'AMZN',\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: '#FFCE56',\r\n        borderColor: '#FFCE56',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#FFCE56',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#FFCE56',\r\n        pointHoverBorderColor: '#FFCE56',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [66, 64, 70, 75, 63, 80, 79]\r\n      }\r\n    ]\r\n  };\r\n  return (\r\n    <div className={classes.sectionRoot}>\r\n      <Typography className={classes.sectionTitle} variant=\"h5\">\r\n        Performance\r\n      </Typography>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BASEURL } from '../Constants';\r\nimport {Pie} from 'react-chartjs-2';\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionRoot: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n  sectionTitle: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function PerformanceSection(props) {\r\n  const classes = useStyles();\r\n  \r\n\r\n  const data = {\r\n    labels: [\r\n      'GOOG',\r\n      'APPL',\r\n      'AMZN'\r\n    ],\r\n    datasets: [{\r\n      data: [50, 20, 30],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n  return (\r\n    <div className={classes.sectionRoot}>\r\n      <Typography className={classes.sectionTitle} variant=\"h5\">\r\n        Portfolio Weight\r\n      </Typography>\r\n      <Pie data={data} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MessageDialog from '../components/MessageDialog'\r\nimport CreatePortfolioDialog from '../components/CreatePortfolioDialog'\r\nimport StockSelectSection from '../views/StockSelectSection'\r\nimport PortfolioToolBar from '../components/PortfolioToolBar'\r\nimport NewsSection from '../views/NewsSection'\r\nimport PerformanceSection from '../views/PerformanceSection'\r\nimport WeightSection from '../views/WeightSection'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { motion } from \"framer-motion\"\r\nimport { BASEURL, NEWS_SECTION, PERFORMANCE_SECTION, WEIGHT_SECTION } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  portfolioPage: {\r\n    height: 'calc(100% - 56px)',\r\n    [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\r\n      height: 'calc(100% - 48px)',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 'calc(100% - 64px)',\r\n    },\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  portfolioContent: {\r\n    flex: 'auto',\r\n    overflowY: \"scroll\"\r\n  },\r\n  companyName: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  sideBar: {\r\n    zIndex: 1300,\r\n  }\r\n}));\r\n\r\nfunction PortfolioPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [companyData, setCompanyData] = React.useState([]);\r\n  const [newsData, setNewsData] = React.useState([]);\r\n  const [companyDataMapping, setCompanyDataMapping] = React.useState({});\r\n  const [userPortfolios, setUserPortfolios] = React.useState([]);\r\n  const [selectedStocks, setPortfolioStocks] = React.useState([]);\r\n  const [dataLoaded, setDataLoaded] = React.useState(false);\r\n  const [isSideBarExpanded, setSideBarExpand] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [saveButtonLoading, setSaveButtonLoading] = React.useState(false);\r\n  const [saveButtonDisabled, setSaveButtonDisabled] = React.useState(false);\r\n  const [isCreatePortfolioDialogOpen, setCreatePortfolioDialogOpen] = React.useState(false);\r\n  const [dialogTitle, setDialogTitle] = React.useState(\"\");\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n  const [currentSelectedPortfolio, setCurrentSelectedPortfolio] = React.useState(null);\r\n  const [currentSelectedStock, setCurrentSelectedStock] = React.useState(\"APPL\");\r\n  const [currentSectionCode, setSectionCode] = React.useState(NEWS_SECTION);\r\n\r\n  let section = null;\r\n\r\n  const sideBarTransitions = {\r\n    open: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        duration: 0.5\r\n      }\r\n    },\r\n    closed: {\r\n      opacity: 0.5,\r\n      x: '-100%',\r\n      transition: {\r\n        duration: 1.0\r\n      }\r\n    }\r\n  };\r\n\r\n  const setSelectedStocks = (stockSymbols) => {\r\n    console.log(stockSymbols);\r\n    console.log(companyDataMapping);\r\n    var stocksDetail = []\r\n    for (var i = 0; i < stockSymbols.length; i++) {\r\n      stocksDetail.push(companyDataMapping[stockSymbols[i]]);\r\n    }\r\n    console.log(stocksDetail);\r\n    setPortfolioStocks(stocksDetail);\r\n  }\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  const handleCreatePortfolioDialogOpen = () => {\r\n    setCreatePortfolioDialogOpen(true);\r\n  };\r\n\r\n  const handleCreatePortfolioDialogClose = () => {\r\n    setCreatePortfolioDialogOpen(false);\r\n  };\r\n\r\n  const renderSection = () => {\r\n    switch (currentSectionCode) {\r\n      case NEWS_SECTION:\r\n        return <NewsSection newsData={newsData} />;\r\n      case PERFORMANCE_SECTION:\r\n        return <PerformanceSection />;\r\n      case WEIGHT_SECTION:\r\n        return <WeightSection />;\r\n      default:\r\n        return <NewsSection newsData={newsData} />;\r\n    }\r\n  };\r\n\r\n  const getCompanyData = async () => {\r\n    const request = {\r\n      method: 'GET',\r\n    }\r\n\r\n    try {\r\n      console.log(\"Try to get company data\");\r\n      //setLoading(true);\r\n      const response = await fetch(BASEURL + \"/company\", request)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        console.log(\"Company data:\");\r\n        console.log(jsonData);\r\n        if (jsonData.isSuccess) {\r\n          var newCompanyDataMapping = {}\r\n          var newCompanyData = []\r\n          for (var i = 0; i < jsonData.data.length; i++) {\r\n            const companInfo = {\r\n              \"companyIndustry\": jsonData.data[i].industry,\r\n              \"companyName\": jsonData.data[i].company_name,\r\n              \"companySymbol\": jsonData.data[i].symbol,\r\n              \"companyId\": jsonData.data[i].id_\r\n            };\r\n            newCompanyDataMapping[jsonData.data[i].symbol] = companInfo\r\n            newCompanyData.push(companInfo);\r\n          }\r\n          setCompanyData(newCompanyData);\r\n          setCompanyDataMapping(newCompanyDataMapping);\r\n        } else {\r\n          alert(jsonData.errorMsg);\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log('Fetch company data failed', err);\r\n    }\r\n    finally {\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getNews = async (selectedStocks) => {\r\n    var companyNames = selectedStocks.map(function (item, index, array) {\r\n      return item.companyName;\r\n    });\r\n\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        'companyNames': companyNames,\r\n      })\r\n    }\r\n\r\n    try {\r\n      if (companyNames.length > 0) {\r\n        console.log(\"Try to get news\");\r\n        //setLoading(true);\r\n        const response = await fetch(BASEURL + \"/news\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            var newNewsData = [];\r\n            for (var i = 0; i < jsonData.data.length; i++) {\r\n              var paragraphs = [];\r\n              for (var j = 0; j < jsonData.data[i].paragraph.length; j++) {\r\n                var paragraph = {\r\n                  \"isKeySentence\": false,\r\n                  \"text\": jsonData.data[i].paragraph[j]\r\n                };\r\n                paragraphs.push(paragraph);\r\n              }\r\n              for (var j = 0; j < jsonData.data[i].keysent.length; j++) {\r\n                paragraphs[jsonData.data[i].keysent[j]][\"isKeySentence\"] = true;\r\n              }\r\n              var dt = new Date(jsonData.data[i].date)\r\n              var news = {\r\n                \"date\": dt.getFullYear() + \"/\" + (dt.getMonth() + 1) + \"/\" + dt.getDate(),\r\n                \"companyName\": jsonData.data[i].company,\r\n                \"paragraph\": paragraphs,\r\n                \"title\": jsonData.data[i].title,\r\n                \"id\": jsonData.data[i].id,\r\n              };\r\n              newNewsData.push(news);\r\n            }\r\n            console.log(newNewsData);\r\n            setNewsData(newNewsData)\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log('Fetch news failed', err);\r\n    }\r\n    finally {\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewPortfolio = async (portfolioName) => {\r\n    const request = {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        'portfolioName': portfolioName,\r\n        'userId': props.userData.userId,\r\n      })\r\n    }\r\n    try {\r\n      const response = await fetch(BASEURL + \"/portfolio/create\", request)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        console.log(jsonData);\r\n        if (jsonData.isSuccess) {\r\n          // get create object\r\n          var newPortfolio = {\r\n            'portfolioId': jsonData.data.id,\r\n            'userId': jsonData.data.user_id,\r\n            'portfolioName': jsonData.data.portfolio_name,\r\n            'portfolioStocks': jsonData.data.portfolio_stocks\r\n          }\r\n          setUserPortfolios([...userPortfolios, newPortfolio]);\r\n          handleCreatePortfolioDialogClose();\r\n        } else {\r\n          alert(jsonData.errorMsg);\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      alert('create new portfolio failed', err);\r\n    }\r\n  }\r\n\r\n  const getUserPortfolio = async () => {\r\n    if (props.userData.userId != undefined) {\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userId': props.userData.userId,\r\n        })\r\n      }\r\n      try {\r\n        console.log(\"Try to get user portfolio data\");\r\n        //setLoading(true);\r\n        const response = await fetch(BASEURL + \"/portfolio\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          console.log(jsonData);\r\n          if (jsonData.isSuccess) {\r\n            // Get portfolio success\r\n            setDataLoaded(true);\r\n            if (jsonData.data.length > 0) {\r\n              // If user have portfolios\r\n              var newPortfolios = []\r\n              for (var i = 0; i < jsonData.data.length; i++) {\r\n                var newPortfolio = {\r\n                  \"portfolioId\": jsonData.data[i].id,\r\n                  \"userId\": jsonData.data[i].user_id,\r\n                  \"portfolioName\": jsonData.data[i].portfolio_name,\r\n                  \"portfolioStocks\": jsonData.data[i].portfolio_stocks,\r\n                };\r\n                newPortfolios.push(newPortfolio);\r\n              }\r\n              setUserPortfolios(newPortfolios);\r\n            } else {\r\n              // If user don't have portfolios\r\n              // Create default one\r\n\r\n            }\r\n          } else {\r\n            // Get portfolio failed\r\n            alert(jsonData.errorMsg);\r\n            setDataLoaded(false);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        setDataLoaded(false);\r\n        console.log('Fetch company data failed', err);\r\n      }\r\n      finally {\r\n        //setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const savePortfolio = async () => {\r\n    if (props.userData.userId != undefined) {\r\n      var currentPortfolioStocks = selectedStocks.map(function (item, index, array) {\r\n        return item.companySymbol;\r\n      });\r\n      console.log(currentPortfolioStocks);\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'portfolioId': currentSelectedPortfolio,\r\n          'portfolioStocks': currentPortfolioStocks\r\n        })\r\n      }\r\n      try {\r\n        console.log(\"Try to save portfolio: \" + currentSelectedPortfolio);\r\n        console.log(request);\r\n        setSaveButtonLoading(true);\r\n        const response = await fetch(BASEURL + \"/portfolio/save\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n\r\n            var tempNewPortfolios = Array.from(userPortfolios);\r\n            tempNewPortfolios.forEach(function (item, index, array) {\r\n              if (item.portfolioId == currentSelectedPortfolio) {\r\n                item.portfolioStocks = currentPortfolioStocks;\r\n              }\r\n            });\r\n            console.log(tempNewPortfolios);\r\n            setUserPortfolios(tempNewPortfolios);\r\n            setDialogTitle(\"Success\")\r\n            setDialogMessage(\"Portfolio has been updated!\");\r\n            handleMessageDialogOpen();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.log('Fetch company data failed', err);\r\n      }\r\n      finally {\r\n        setSaveButtonLoading(false);\r\n      }\r\n    } else if (props.userData.userId == undefined) {\r\n      setDialogMessage(\"Please login first\");\r\n      handleMessageDialogOpen();\r\n    } else if (currentSelectedPortfolio == undefined) {\r\n      setDialogMessage(\"Create portfolio first\");\r\n      handleMessageDialogOpen();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(currentSectionCode)\r\n  }, [currentSectionCode]);\r\n  \r\n  React.useEffect(() => {\r\n    if (!dataLoaded) {\r\n      getCompanyData();\r\n    }\r\n    if (props.userData.userId !== undefined) {\r\n      getUserPortfolio();\r\n    }\r\n  }, [props.userData]);\r\n\r\n  React.useEffect(() => {\r\n    if (userPortfolios.length > 0 && currentSelectedPortfolio == undefined) {\r\n      setCurrentSelectedPortfolio(userPortfolios[0].portfolioId);\r\n      setSelectedStocks(userPortfolios[0].portfolioStocks);\r\n    }\r\n  }, [userPortfolios]);\r\n\r\n  React.useEffect(() => {\r\n    console.log('newssection');\r\n    if (selectedStocks != undefined && selectedStocks.length > 0) {\r\n      console.log('getNews');\r\n\r\n      getNews(selectedStocks);\r\n    }\r\n  }, [selectedStocks]);\r\n\r\n  return (\r\n    <div className={classes.portfolioPage}>\r\n      <MessageDialog\r\n        isOpen={isMessageDialogOpen}\r\n        handleClose={handleMessageDialogClose}\r\n        title={dialogTitle}\r\n        message={dialogMessage}\r\n      >\r\n      </MessageDialog>\r\n      <CreatePortfolioDialog\r\n        isOpen={isCreatePortfolioDialogOpen}\r\n        handleClose={handleCreatePortfolioDialogClose}\r\n        userPortfolios={userPortfolios}\r\n        setUserPortfolios={setUserPortfolios}\r\n        setCurrentSelectedPortfolio={setCurrentSelectedPortfolio}\r\n        createNewPortfolio={createNewPortfolio}\r\n        userData={props.userData}\r\n      >\r\n      </CreatePortfolioDialog>\r\n      <PortfolioToolBar\r\n        selectedStocks={selectedStocks}\r\n        setSelectedStocks={setSelectedStocks}\r\n        companyData={companyData}\r\n        setDialogTitle={setDialogTitle}\r\n        setDialogMessage={setDialogMessage}\r\n        isSideBarExpanded={isSideBarExpanded}\r\n        setSideBarExpand={setSideBarExpand}\r\n        openMessageDialog={handleMessageDialogOpen}\r\n        userPortfolios={userPortfolios}\r\n        setUserPortfolios={setUserPortfolios}\r\n        currentSelectedPortfolio={currentSelectedPortfolio}\r\n        setCurrentSelectedPortfolio={setCurrentSelectedPortfolio}\r\n        handleCreatePortfolioDialogOpen={handleCreatePortfolioDialogOpen}\r\n        userData={props.userData}\r\n        setSectionCode={setSectionCode}\r\n      >\r\n      </PortfolioToolBar>\r\n      <motion.div\r\n        className={classes.sideBar}\r\n        initial={'closed'}\r\n        animate={isSideBarExpanded ? \"open\" : \"closed\"}\r\n        variants={sideBarTransitions}\r\n      >\r\n        <StockSelectSection\r\n          selectedStocks={selectedStocks}\r\n          setSelectedStocks={setSelectedStocks}\r\n          currentSelectedStock={currentSelectedStock}\r\n          setCurrentSelectedStock={setCurrentSelectedStock}\r\n          savePortfolio={savePortfolio}\r\n          saveButtonLoading={saveButtonLoading}\r\n          saveButtonDisabled={saveButtonDisabled}\r\n        >\r\n        </StockSelectSection>\r\n      </motion.div>\r\n      <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\" className={classes.portfolioContent}>\r\n        <Grid item xs={10} md={6}>\r\n          {renderSection()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport PortfolioPage from './pages/PortfolioPage'\r\nimport Cookies from 'universal-cookie';\r\n\r\n// {\r\n//   height: 'calc(100% - 56px)',\r\n//   [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\r\n//     height: 'calc(100% - 48px)',\r\n//   },\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     height: 'calc(100% - 64px)',\r\n//   },\r\n// },\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nconst toolbarRelativeProperties = (property, modifier = value => value) => theme =>\r\n  Object.keys(theme.mixins.toolbar).reduce((style, key) => {\r\n    const value = theme.mixins.toolbar[key];\r\n    if (key === 'minHeight') {\r\n      return { ...style, [property]: modifier(value) };\r\n    }\r\n    if (value.minHeight !== undefined) {\r\n      return { ...style, [key]: { [property]: modifier(value.minHeight) } };\r\n    }\r\n    return style;\r\n  }, {});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userId: cookies.get('userId'),\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n  console.log(userData);\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopNavBar userData={userData} setUserData={setUserData}></TopNavBar>\r\n      <PortfolioPage\r\n        userData={userData}\r\n      >\r\n      </PortfolioPage>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme.js'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}