{"version":3,"sources":["components/NavBarAccountButton.js","components/MessageDialog.js","Constants.js","components/TopNavBar.js","pages/LoginPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","popperStyle","zIndex","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","logoutButtonOnClick","e","setUserData","userId","userName","userEmail","cookies","Cookies","remove","path","window","location","pathname","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","endIcon","ref","aria-controls","undefined","aria-haspopup","onClick","userData","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","message","textAlign","margin","spacing","MessageDialog","Dialog","isOpen","onClose","aria-labelledby","title","DialogTitle","DialogContent","Typography","flexGrow","brandButton","textTransform","marginRight","rightButtons","marginLeft","iconSize","width","height","accountButtons","dashboardButton","TopNavBar","isMessageDialogOpen","setMessageDialogOpen","dialogMessage","AppBar","position","Toolbar","size","alt","src","Copyright","variant","align","Link","href","Date","getFullYear","paper","marginTop","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","inputBox","submit","imageIcon","errorMessage","backdrop","LoginPage","emailInputIsError","setEmailError","passwordInputIsError","setPasswordError","backdropOpen","setBackdropOpen","emailInputErrorMsg","setEmailErrorMsg","passwordInputMsg","setPasswordErrorMsg","errorMsg","setErrorMsg","emailInput","passwordInput","handleBackdropClose","checkEmailInputEmpty","value","length","console","log","checkPasswordInputEmpty","loginButtonOnClick","a","request","method","headers","Accept","body","JSON","stringify","fetch","BASEURL","response","ok","json","jsonData","isSuccess","set","Backdrop","CircularProgress","Container","component","maxWidth","CssBaseline","TextField","required","name","autoComplete","autoFocus","inputRef","label","type","fullWidth","error","helperText","onBlur","Grid","container","item","Box","mt","App","get","createMuiTheme","primary","themeName","Boolean","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1ccdd13e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  },\r\n  popperStyle: {\r\n    zIndex: '1400',\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userId: null,\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userId', { path: '/' });\r\n    cookies.remove('userName', { path: '/' });\r\n    cookies.remove('userEmail', { path: '/' });\r\n\r\n    handleClose(e)\r\n    window.location.pathname = './';\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          endIcon={<ExpandMoreIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          {\r\n            props.userData.userName == undefined ? \r\n              \"Account\"\r\n            : \r\n            props.userData.userName\r\n          }\r\n        </Button>\r\n        <Popper \r\n          className={classes.popperStyle} \r\n          open={open} \r\n          anchorEl={anchorRef.current} \r\n          role={undefined} \r\n          transition \r\n          disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function MessageDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {\r\n          props.title != null && \r\n          <DialogTitle>{props.title}</DialogTitle>\r\n        }\r\n        <DialogContent>\r\n          <Typography className={classes.message}>\r\n            {props.message}\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","//export const BASEURL = \"http://54.184.86.20:5000\";\r\nexport const BASEURL = \"http://127.0.0.1:5000\";\r\n\r\nexport const NEWS_SECTION = 0;\r\nexport const PERFORMANCE_SECTION = 1;\r\nexport const WEIGHT_SECTION = 2;\r\n\r\nexport const HOME_PAGE = 0;\r\nexport const DASHBOARD_PAGE = 1;\r\n\r\nexport const COLOR_PALETTES = [\r\n    \"#d847a7\",\r\n    \"#5bc452\",\r\n    \"#a848bf\",\r\n    \"#8ebc3a\",\r\n    \"#9d68e3\",\r\n    \"#41922e\",\r\n    \"#4d54c3\",\r\n    \"#b4b534\",\r\n    \"#6978e7\",\r\n    \"#d5a334\",\r\n    \"#588de5\",\r\n    \"#d97f2e\",\r\n    \"#7b4fab\",\r\n    \"#48c27b\",\r\n    \"#e14079\",\r\n    \"#328b4c\",\r\n    \"#db7ada\",\r\n    \"#7a8d2b\",\r\n    \"#a04b97\",\r\n    \"#68c194\",\r\n    \"#d23c4d\",\r\n    \"#47cebe\",\r\n    \"#d64b2b\",\r\n    \"#54b9e5\",\r\n    \"#a44925\",\r\n    \"#3db6c0\",\r\n    \"#b03371\",\r\n    \"#6b9854\",\r\n    \"#cf90d5\",\r\n    \"#4e6e27\",\r\n    \"#9279c3\",\r\n    \"#bcab59\",\r\n    \"#4860a5\",\r\n    \"#a2bb73\",\r\n    \"#725392\",\r\n    \"#7b6e20\",\r\n    \"#a0a0e2\",\r\n    \"#96642d\",\r\n    \"#4e90c8\",\r\n    \"#e57f5f\",\r\n    \"#379577\",\r\n    \"#aa4356\",\r\n    \"#367042\",\r\n    \"#df80a9\",\r\n    \"#206e54\",\r\n    \"#e17f82\",\r\n    \"#77733e\",\r\n    \"#965581\",\r\n    \"#d69d6a\",\r\n    \"#995258\"\r\n];","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport MessageDialog from './MessageDialog'\r\nimport { HOME_PAGE, DASHBOARD_PAGE } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    textTransform: 'none',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n  iconSize: {\r\n    width: \"26px\",\r\n    height: \"26px\",\r\n  },\r\n  accountButtons: {\r\n    display: 'inline-flex',\r\n  },\r\n  dashboardButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isSignupDialogOpen, setSignupDialogOpen] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          message={dialogMessage}\r\n        >\r\n        </MessageDialog>\r\n        <Toolbar>\r\n          <Button\r\n            className={classes.brandButton}\r\n            color=\"inherit\"\r\n            size=\"large\"\r\n            onClick={() => { window.location.pathname = './' }}\r\n            startIcon={\r\n              <img \r\n                alt=\"\"\r\n                className={classes.iconSize}\r\n                src={'../static/logo26.png'} \r\n              />\r\n            }\r\n          >\r\n            HuggingMoney\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail == undefined\r\n                ?\r\n                <Button color=\"inherit\" onClick={(e) => { window.location.pathname = './login' }}>\r\n                  Login\r\n                </Button>\r\n                :\r\n                <div className={classes.accountButtons}>\r\n                  <Button \r\n                    color=\"inherit\" \r\n                    className={classes.dashboardButton}\r\n                    onClick={() => { window.location.pathname = './dashboard' }}\r\n                  >\r\n                    Dashboard\r\n                  </Button>\r\n                  <NavBarAccountButton\r\n                    setUserData={props.setUserData}\r\n                    userData={props.userData}\r\n                  >\r\n                  </NavBarAccountButton>\r\n                </div>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL, SIGNUP_PAGE, DASHBOARD_PAGE } from '../Constants';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://github.com/henry32144/intelligent-asset-allocation/\">\r\n        HuggingMoney\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  imageIcon: {\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  backdrop: {\r\n    zIndex: 1600,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function LoginPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n  const [backdropOpen, setBackdropOpen] = React.useState(false);\r\n\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n  const handleBackdropClose = () => {\r\n    setBackdropOpen(false);\r\n  };\r\n  const handleBackdropToggle = () => {\r\n    setBackdropOpen(!backdropOpen);\r\n  };\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const signUpOnClick = async (e) => {\r\n    window.location.pathname = './signup';\r\n  }\r\n\r\n  const loginButtonOnClick = async (e) => {\r\n    // If no error in both textfield\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (emailInput.current.value.length > 0 && passwordInput.current.value.length > 0) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        handleBackdropToggle();\r\n        const response = await fetch(BASEURL + \"/user/login\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // Temp user name\r\n            const userId = jsonData.userId;\r\n            const userName = jsonData.userName;\r\n            const userEmail = emailInput.current.value;\r\n\r\n            props.setUserData({\r\n              userId: userId,\r\n              userName: userName,\r\n              userEmail: userEmail,\r\n            });\r\n\r\n            // Store user data into cookies\r\n            const cookies = new Cookies();\r\n            cookies.set('userId', userId, { path: '/' });\r\n            cookies.set('userName', userName, { path: '/' });\r\n            cookies.set('userEmail', userEmail, { path: '/' });\r\n            window.location.pathname = './dashboard';\r\n          } else {\r\n            setErrorMsg(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.log('fetch failed', err);\r\n      }\r\n      finally {\r\n        handleBackdropClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleBackdropClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <img className={classes.imageIcon} src=\"../static/logo80.png\" />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In\r\n        </Typography>\r\n          <div className={classes.form}>\r\n            <TextField\r\n              required\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={emailInput}\r\n              margin=\"normal\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              error={emailInputIsError}\r\n              helperText={emailInputErrorMsg}\r\n              className={classes.inputBox}\r\n              onBlur={emailInputOnBlur}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              name=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={passwordInput}\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              error={passwordInputIsError}\r\n              helperText={passwordInputMsg}\r\n              className={classes.inputBox}\r\n              onBlur={passwordInputOnBlur}\r\n            />\r\n            <Typography className={classes.errorMessage}>\r\n              {errorMsg}\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={loginButtonOnClick}\r\n              className={classes.submit}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"./signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport LoginPage from './pages/LoginPage'\r\nimport { HOME_PAGE, DASHBOARD_PAGE } from './Constants';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userId: cookies.get('userId'),\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopNavBar \r\n        userData={userData} \r\n        setUserData={setUserData}\r\n      />\r\n      <LoginPage\r\n          userData={userData}\r\n          setUserData={setUserData}\r\n      />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme.js'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}