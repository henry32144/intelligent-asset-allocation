{"version":3,"sources":["components/NavBarAccountButton.js","components/MessageDialog.js","Constants.js","components/TopNavBar.js","pages/LandingPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","popperStyle","zIndex","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","logoutButtonOnClick","e","setUserData","userId","userName","userEmail","cookies","Cookies","remove","path","window","location","pathname","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","endIcon","ref","aria-controls","undefined","aria-haspopup","onClick","userData","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","message","textAlign","margin","spacing","MessageDialog","Dialog","isOpen","onClose","aria-labelledby","title","DialogTitle","DialogContent","Typography","flexGrow","brandButton","textTransform","marginRight","rightButtons","marginLeft","iconSize","width","height","accountButtons","dashboardButton","TopNavBar","isMessageDialogOpen","setMessageDialogOpen","dialogMessage","AppBar","position","Toolbar","size","alt","src","masthead","background","backgroundPosition","backgroundRepeat","backgroundSize","maxHeight","padding","mastheadText","mastheadButton","backgroundColor","LandingPage","Grid","container","justify","alignItems","item","md","sm","xs","variant","App","get","createMuiTheme","palette","primary","main","secondary","themeName","Boolean","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8b11ece9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  },\r\n  popperStyle: {\r\n    zIndex: '1400',\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userId: null,\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userId', { path: '/' });\r\n    cookies.remove('userName', { path: '/' });\r\n    cookies.remove('userEmail', { path: '/' });\r\n\r\n    handleClose(e)\r\n    window.location.pathname = './';\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          endIcon={<ExpandMoreIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          {\r\n            props.userData.userName == undefined ? \r\n              \"Account\"\r\n            : \r\n            props.userData.userName\r\n          }\r\n        </Button>\r\n        <Popper \r\n          className={classes.popperStyle} \r\n          open={open} \r\n          anchorEl={anchorRef.current} \r\n          role={undefined} \r\n          transition \r\n          disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function MessageDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {\r\n          props.title != null && \r\n          <DialogTitle>{props.title}</DialogTitle>\r\n        }\r\n        <DialogContent>\r\n          <Typography className={classes.message}>\r\n            {props.message}\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","//export const BASEURL = \"http://54.184.86.20:5000\";\r\nexport const BASEURL = \"http://127.0.0.1:5000\";\r\n\r\nexport const NEWS_SECTION = 0;\r\nexport const PERFORMANCE_SECTION = 1;\r\nexport const WEIGHT_SECTION = 2;\r\n\r\nexport const HOME_PAGE = 0;\r\nexport const DASHBOARD_PAGE = 1;\r\n\r\nexport const COLOR_PALETTES = [\r\n    \"#d847a7\",\r\n    \"#5bc452\",\r\n    \"#a848bf\",\r\n    \"#8ebc3a\",\r\n    \"#9d68e3\",\r\n    \"#41922e\",\r\n    \"#4d54c3\",\r\n    \"#b4b534\",\r\n    \"#6978e7\",\r\n    \"#d5a334\",\r\n    \"#588de5\",\r\n    \"#d97f2e\",\r\n    \"#7b4fab\",\r\n    \"#48c27b\",\r\n    \"#e14079\",\r\n    \"#328b4c\",\r\n    \"#db7ada\",\r\n    \"#7a8d2b\",\r\n    \"#a04b97\",\r\n    \"#68c194\",\r\n    \"#d23c4d\",\r\n    \"#47cebe\",\r\n    \"#d64b2b\",\r\n    \"#54b9e5\",\r\n    \"#a44925\",\r\n    \"#3db6c0\",\r\n    \"#b03371\",\r\n    \"#6b9854\",\r\n    \"#cf90d5\",\r\n    \"#4e6e27\",\r\n    \"#9279c3\",\r\n    \"#bcab59\",\r\n    \"#4860a5\",\r\n    \"#a2bb73\",\r\n    \"#725392\",\r\n    \"#7b6e20\",\r\n    \"#a0a0e2\",\r\n    \"#96642d\",\r\n    \"#4e90c8\",\r\n    \"#e57f5f\",\r\n    \"#379577\",\r\n    \"#aa4356\",\r\n    \"#367042\",\r\n    \"#df80a9\",\r\n    \"#206e54\",\r\n    \"#e17f82\",\r\n    \"#77733e\",\r\n    \"#965581\",\r\n    \"#d69d6a\",\r\n    \"#995258\"\r\n];","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport MessageDialog from './MessageDialog'\r\nimport { HOME_PAGE, DASHBOARD_PAGE } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    textTransform: 'none',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n  iconSize: {\r\n    width: \"26px\",\r\n    height: \"26px\",\r\n  },\r\n  accountButtons: {\r\n    display: 'inline-flex',\r\n  },\r\n  dashboardButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isSignupDialogOpen, setSignupDialogOpen] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          message={dialogMessage}\r\n        >\r\n        </MessageDialog>\r\n        <Toolbar>\r\n          <Button\r\n            className={classes.brandButton}\r\n            color=\"inherit\"\r\n            size=\"large\"\r\n            onClick={() => { window.location.pathname = './' }}\r\n            startIcon={\r\n              <img \r\n                alt=\"\"\r\n                className={classes.iconSize}\r\n                src={'../static/logo26.png'} \r\n              />\r\n            }\r\n          >\r\n            HuggingMoney\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail == undefined\r\n                ?\r\n                <Button color=\"inherit\" onClick={(e) => { window.location.pathname = './login' }}>\r\n                  Login\r\n                </Button>\r\n                :\r\n                <div className={classes.accountButtons}>\r\n                  <Button \r\n                    color=\"inherit\" \r\n                    className={classes.dashboardButton}\r\n                    onClick={() => { window.location.pathname = './dashboard' }}\r\n                  >\r\n                    Dashboard\r\n                  </Button>\r\n                  <NavBarAccountButton\r\n                    setUserData={props.setUserData}\r\n                    userData={props.userData}\r\n                  >\r\n                  </NavBarAccountButton>\r\n                </div>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n// core components\r\n\r\n// Sections for this page\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  masthead: {\r\n    background: \"url(../static/landing_img2.jpg)\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    height: \"100vh\",\r\n    maxHeight: \"1600px\",\r\n    padding: theme.spacing(0, 2, 0),\r\n\r\n  },\r\n  mastheadText: {\r\n    margin: theme.spacing(0, 4, 0),\r\n  },\r\n  mastheadButton: {\r\n    backgroundColor: \"#81bc44\",\r\n    color: \"white\"\r\n  },\r\n  mastheadText: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function LandingPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const startOnClick = () => {\r\n    if (props.userData.userId == undefined) {\r\n      window.location.pathname = './login'\r\n    } else {\r\n      window.location.pathname = './dashboard'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.masthead} justify=\"center\" alignItems=\"center\">\r\n        <Grid item md={8} sm={10} xs={12}>\r\n          <Grid item md={6} sm={8} xs={12} className={classes.mastheadText}>\r\n            <Typography variant=\"h4\" className={classes.mastheadText}>Invest smarter with Hugging Money.</Typography>\r\n            <Typography variant=\"subtitle2\" className={classes.mastheadText}>\r\n              Join Hugging Money and get tools to help you build your own portfolio, without paying the transaction fee, management fee, redemption as like you buy mutual funds.\r\n              </Typography>\r\n            <br />\r\n            <Button\r\n              className={classes.mastheadButton}\r\n              size=\"large\"\r\n              onClick={startOnClick}\r\n            >\r\n              Start Now\r\n             </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport LandingPage from './pages/LandingPage'\r\nimport { HOME_PAGE, DASHBOARD_PAGE } from './Constants';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userId: cookies.get('userId'),\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopNavBar \r\n        userData={userData} \r\n        setUserData={setUserData}\r\n      />\r\n      <LandingPage\r\n          userData={userData}\r\n      />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme.js'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <App/>\n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}