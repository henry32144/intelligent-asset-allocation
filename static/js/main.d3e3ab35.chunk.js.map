{"version":3,"sources":["components/TopNavBar.js","components/SubmitSelectionButton.js","components/InvestmentStrategyRadios.js","components/StockListItem.js","components/StockSelectedList.js","components/StockSearchBox.js","views/StockSelectSection.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","brandButton","marginRight","spacing","rightButtons","marginLeft","TopNavBar","classes","className","AppBar","position","Toolbar","Button","color","size","loginButton","aria-label","margin","CreatePortfolioButton","submitSelection","a","settings","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","jsonData","console","log","variant","onClick","e","textAlign","InvestmentStrategyRadios","React","useState","value","setValue","FormControl","component","FormLabel","RadioGroup","name","onChange","event","target","FormControlLabel","control","Radio","label","StockListItem","props","ListItem","alignItems","ListItemText","primary","companyName","secondary","companyCode","IconButton","edge","stockComponent","listSubHeader","renderRow","data","index","style","rowItem","StockSelectedList","additionalStyles","selectedData","Box","height","itemSize","itemCount","length","itemData","searchBox","padding","display","minWidth","width","input","flex","iconButton","divider","StockSearchBox","Paper","InputBase","placeholder","inputProps","StockSelectSection","boxShadow","title","App","Grid","container","direction","justify","item","xs","Typography","gridItem","createMuiTheme","palette","main","themeName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3e3ab35.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar() {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Button className={classes.brandButton} color=\"inherit\" size=\"large\">\r\n            AI Asset\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            <Button className={classes.loginButton} color=\"inherit\" aria-label=\"Login\">\r\n                Login\r\n            </Button>\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CreatePortfolioButton() {\r\n  const classes = useStyles();\r\n\r\n  const submitSelection = async () => {\r\n    // Submit user's stock selection to the server\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'selectedStocks': ['123']\r\n        })\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/post-test\", settings)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        console.log(jsonData);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log('fetch failed', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"primary\" size='large' onClick={(e) => {submitSelection()}}>\r\n        Create Portfolio\r\n      </Button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'initial',\r\n  }\r\n}));\r\n\r\nexport default function InvestmentStrategyRadios() {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState('active');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Investment Strategy</FormLabel>\r\n        <RadioGroup aria-label=\"Investment Strategy\" name=\"strategy\" value={value} onChange={handleChange}>\r\n          <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n          <FormControlLabel value=\"passive\" control={<Radio />} label=\"Passive\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function StockListItem(props) {\r\n  /* \r\n    props data structure-\r\n      companyName(string): the name of the company, Ex: Apple Inc.\r\n      companyCode(string): the code of the company in the market, Ex: NASDAQ: AAPL\r\n  */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText primary={props.companyName} secondary={props.companyCode} />\r\n        <IconButton edge=\"end\" aria-label=\"delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport StockListItem from './StockListItem'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{},\r\n  stockComponent: {},\r\n  listSubHeader: {\r\n      textAlign: 'initial'\r\n  }\r\n}));\r\n\r\n\r\nfunction renderRow(props) {\r\n  const { data, index, style } = props;\r\n  const rowItem = data[index];\r\n  return (\r\n    <div style={style}>\r\n      {\r\n        <StockListItem companyName={rowItem.companyName} companyCode={rowItem.companyCode}>\r\n        </StockListItem>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction StockSelectedList(props) {\r\n  const { additionalStyles } = props\r\n  const classes = useStyles();\r\n  const [selectedData, setSelectedData] = React.useState([{companyName:\"Alphabet Inc.\", companyCode:\"NASDAQ：GOOG\"},\r\n    {companyName:\"Apple Inc.\", companyCode:\"NASDAQ: AAPL\"},\r\n    {companyName:\"Amazon.com, Inc.\", companyCode:\"NASDAQ: AMZN\"}\r\n  ]);\r\n\r\n  return (\r\n    <Box className={additionalStyles.stockComponent}>\r\n      <FixedSizeList \r\n        height={350}\r\n        itemSize={60} \r\n        itemCount={selectedData.length}\r\n        itemData={selectedData}\r\n      >\r\n        {renderRow}\r\n      </FixedSizeList >\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StockSelectedList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{},\r\n  stockComponent: {},\r\n  searchBox: {\r\n    margin: theme.spacing(2, 0, 0),\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 330,\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n  \r\nfunction StockSearchBox(props) {\r\n  const { additionalStyles } = props\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={additionalStyles.stockComponent}>\r\n      <Paper component=\"form\" className={classes.searchBox}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Search Stocks\"\r\n          inputProps={{ 'aria-label': 'search stocks' }}\r\n        />\r\n        <IconButton className={classes.iconButton} aria-label=\"search\" onClick={(e) => {console.log(\"search on click\")}}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockSearchBox;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockSelectedList from '../components/StockSelectedList'\r\nimport StockSearchBox from '../components/StockSearchBox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2, 2, 2),\r\n    flexGrow: 1,\r\n  },\r\n  stockComponent: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n  \r\nexport default function StockSelectSection() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root} boxShadow={0}>\r\n      <StockSearchBox additionalStyles={classes} />\r\n      <StockSelectedList additionalStyles={classes} />\r\n    </Box>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TopNavBar from './components/TopNavBar'\nimport SubmitSelectionButton from './components/SubmitSelectionButton';\nimport Grid from '@material-ui/core/Grid';\nimport InvestmentStrategyRadios from './components/InvestmentStrategyRadios'\nimport Typography from '@material-ui/core/Typography';\nimport StockSelectSection from './views/StockSelectSection'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    textAlign: 'initial',\n    margin: theme.spacing(4, 0, 2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <TopNavBar></TopNavBar>\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Grid className={classes.title} item xs={12}>\n            <Typography variant=\"h6\">\n              Choose your strategy\n            </Typography>\n          </Grid>\n          <Grid className={classes.gridItem} item xs={12}>\n            <InvestmentStrategyRadios/>\n          </Grid>\n          <Grid className={classes.title} item xs={12}>\n            <Typography variant=\"h6\">\n              Select Stocks\n            </Typography>\n          </Grid>\n          <Grid className={classes.gridItem} item xs={12} >\n            <StockSelectSection></StockSelectSection>\n          </Grid>\n          <Grid className={classes.gridItem} item xs={12} >\n            <SubmitSelectionButton/>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme.js'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App/>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}