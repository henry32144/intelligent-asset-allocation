{"version":3,"sources":["components/NavBarAccountButton.js","Constants.js","components/LoginDialog.js","components/SignupDialog.js","components/MessageDialog.js","components/TopNavBar.js","components/CreatePortfolioDialog.js","components/StockListItem.js","components/StockSelectedList.js","views/StockSelectSection.js","components/StockSearchBox.js","components/PortfolioMenuButtons.js","components/PortfolioDetailButtons.js","components/PortfolioToolBar.js","components/NewsCard.js","views/NewsSection.js","pages/PortfolioPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","cookies","Cookies","handleClose","event","current","contains","target","logoutButtonOnClick","e","setUserData","userName","userEmail","remove","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","ref","aria-controls","undefined","aria-haspopup","onClick","get","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","BASEURL","dialogLeftButton","marginRight","dialogInputBox","margin","spacing","dialogActions","errorMessage","circleProgress","zIndex","position","top","left","marginTop","marginLeft","LoginDialog","loading","setLoading","emailInputIsError","setEmailError","passwordInputIsError","setPasswordError","emailInputErrorMsg","setEmailErrorMsg","passwordInputMsg","setPasswordErrorMsg","errorMsg","setErrorMsg","emailInput","passwordInput","checkEmailInputEmpty","value","length","console","log","checkPasswordInputEmpty","openSignupDialog","a","openSignup","loginButtonOnClick","request","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","jsonData","isSuccess","userId","set","path","alert","Dialog","isOpen","onClose","aria-labelledby","Fade","in","unmountOnExit","CircularProgress","DialogTitle","DialogContent","TextField","autoFocus","inputRef","label","type","variant","fullWidth","error","helperText","onBlur","Typography","DialogActions","SignupDialog","nameInputIsError","setNameError","nameInputErrorMsg","setNameErrorMsg","nameInput","checkNameInputEmpty","signUpButtonOnClick","setDialogMessage","openMessageDialog","message","textAlign","MessageDialog","title","flexGrow","brandButton","rightButtons","TopNavBar","isLoginDialogOpen","setLoginDialogOpen","isSignupDialogOpen","setSignupDialogOpen","isMessageDialogOpen","setMessageDialogOpen","dialogMessage","AppBar","Toolbar","size","userData","CreatePortfolioDialog","createButtonOnClick","listItemText","textOverflow","StockListItem","ListItem","button","alignItems","stockListItemOnclick","companySymbol","ListItemText","primary","companyName","secondary","IconButton","edge","aria-label","removeSelectedStock","companyId","stockComponent","listSubHeader","listTitle","emptyText","StockSelectedList","selectedStocks","Array","from","index","findIndex","x","splice","setSelectedStocks","symbol","currentSelectedStock","setCurrentSelectedStock","renderRow","data","rowItem","Box","Divider","height","itemSize","itemCount","itemData","padding","breakpoints","up","width","StockSelectSection","boxShadow","searchBox","minWidth","StockSearchBox","companyData","additionalStyles","addStockToPortfolio","newValue","find","id_","setDialogTitle","newSelectedStock","company_name","Autocomplete","freeSolo","disableClearable","onChange","options","getOptionLabel","option","filterOptions","inputValue","matchSorter","keys","slice","renderInput","params","InputProps","expandButton","popperRoot","popperMenuItem","paddingRight","PortfolioMenuButtons","createPortfolioOnClick","handleCreatePortfolioDialogOpen","portfolioMenuItems","userPortfolios","map","portfolio","protfolioId","toString","noWrap","portfolioName","menuButton","setSideBarExpand","isSideBarExpanded","endIcon","light","component","fontSize","PortfolioDetailButtons","showSearchButton","minHeight","menuButtons","PortfolioToolBar","Grid","container","direction","justify","item","xs","sm","setUserPortfolios","currentSelectedPortfolio","setCurrentSelectedPortfolio","Hidden","smUp","xsDown","bullet","transform","pos","marginBottom","NewsCard","Card","CardContent","CardActions","newsSection","NewsSection","portfolioPage","portfolioContent","flex","sideBar","PortfolioPage","setCompanyData","dataLoaded","setDataLoaded","isCreatePortfolioDialogOpen","setCreatePortfolioDialogOpen","dialogTitle","getCompanyData","div","initial","animate","variants","opacity","duration","closed","App","createMuiTheme","palette","main","themeName","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.755c9a5f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const cookies = new Cookies();\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userName');\r\n    cookies.remove('userEmail');\r\n\r\n    handleClose(e)\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          {\r\n            cookies.get('userName') == undefined ? \r\n              \"Account\"\r\n            : \r\n            cookies.get('userName')\r\n          }\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const BASEURL = \"http://127.0.0.1:5000\"","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogLeftButton: {\r\n    marginRight: 'auto',\r\n  },\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function LoginDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [errorMsgIsShow, setErrorMsgShow] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const openSignupDialog = async (e) => {\r\n    props.openSignup();\r\n    props.handleClose();\r\n  }\r\n\r\n  const loginButtonOnClick = async (e) => {\r\n    // If no error in both textfield\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (emailInput.current.value.length > 0 && passwordInput.current.value.length > 0) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/login\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // Temp user name\r\n            const userId = jsonData.userId;\r\n            const userName = \"Steve\";\r\n            const userEmail = emailInput.current.value;\r\n\r\n            props.setUserData({\r\n              userId: userId,\r\n              userName: userName,\r\n              userEmail: userEmail,\r\n            });\r\n\r\n            // Store user data into cookies\r\n            const cookies = new Cookies();\r\n            cookies.set('userId', userId, { path: '/' });\r\n            cookies.set('userName', userName, { path: '/' });\r\n            cookies.set('userEmail', userEmail, { path: '/' });\r\n            props.handleClose();\r\n          } else {\r\n            setErrorMsg(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMsg}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button onClick={openSignupDialog} color=\"primary\" className={classes.dialogLeftButton}>\r\n            Sign up\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={loginButtonOnClick} color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function SignupDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [nameInputIsError, setNameError] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [nameInputErrorMsg, setNameErrorMsg] = React.useState(\"\");\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n\r\n  const nameInput = React.useRef();\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n  const checkNameInputEmpty = () => {\r\n    if (nameInput.current.value.length < 1) {\r\n      console.log(\"Name is empty\")\r\n      setNameError(true);\r\n      setNameErrorMsg(\"Name cannot be empty\");\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const nameInputOnBlur = () => {\r\n    checkNameInputEmpty();\r\n  };\r\n\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const signUpSucceed = () => {\r\n    props.setDialogMessage(\"Sign up success!\");\r\n    props.openMessageDialog();\r\n    props.handleClose();\r\n  };\r\n\r\n  const signUpButtonOnClick = async (e) => {\r\n    checkNameInputEmpty();\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    // If no error in both textfield\r\n    if (nameInput.current.value.length > 0 &&\r\n      emailInput.current.value.length > 0 &&\r\n      passwordInput.current.value.length > 0) {\r\n\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userName': nameInput.current.value,\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/signup\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            signUpSucceed();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Signup</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={nameInput}\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"User Name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={nameInputIsError}\r\n            helperText={nameInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={nameInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button variant=\"contained\" onClick={signUpButtonOnClick} color=\"primary\">\r\n            Sign up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function MessageDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {\r\n          props.title != null && \r\n          <DialogTitle>{props.title}</DialogTitle>\r\n        }\r\n        <DialogContent>\r\n          <Typography className={classes.message}>\r\n            {props.message}\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport LoginDialog from './LoginDialog'\r\nimport SignupDialog from './SignupDialog'\r\nimport MessageDialog from './MessageDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isSignupDialogOpen, setSignupDialogOpen] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    setLoginDialogOpen(true);\r\n  };\r\n\r\n  const handleLoginDialogClose = () => {\r\n    setLoginDialogOpen(false);\r\n  };\r\n\r\n  const handleSignupDialogOpen = () => {\r\n    setSignupDialogOpen(true);\r\n  };\r\n\r\n  const handleSignupDialogClose = () => {\r\n    setSignupDialogOpen(false);\r\n  };\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <LoginDialog\r\n          isOpen={isLoginDialogOpen}\r\n          handleClose={handleLoginDialogClose}\r\n          setUserData={props.setUserData}\r\n          openSignup={handleSignupDialogOpen}>\r\n        </LoginDialog>\r\n        <SignupDialog\r\n          isOpen={isSignupDialogOpen}\r\n          handleClose={handleSignupDialogClose}\r\n          setDialogMessage={setDialogMessage}\r\n          openMessageDialog={handleMessageDialogOpen}\r\n        >\r\n        </SignupDialog>\r\n        <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          message={dialogMessage}\r\n        >\r\n        </MessageDialog> \r\n        <Toolbar>\r\n          <Button className={classes.brandButton} color=\"inherit\" size=\"large\">\r\n            AI Asset\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail === undefined\r\n                ?\r\n                <Button color=\"inherit\" onClick={(e) => { handleLoginDialogOpen() }}>\r\n                  Login\r\n                </Button>\r\n                :\r\n                <NavBarAccountButton setUserData={props.setUserData}></NavBarAccountButton>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function CreatePortfolioDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [errorMsgIsShow, setErrorMsgShow] = React.useState(false);\r\n  const [nameInputIsError, setNameError] = React.useState(false);\r\n\r\n  const [nameInputErrorMsg, setNameErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n\r\n  const nameInput = React.useRef();\r\n\r\n\r\n  const checkNameInputEmpty = () => {\r\n    if (nameInput.current.value.length < 1) {\r\n      setNameError(true);\r\n      setNameErrorMsg(\"Portfolio's name cannot be empty\");\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const nameInputOnBlur = () => {\r\n    checkNameInputEmpty();\r\n  };\r\n\r\n  const createButtonOnClick = async (e) => {\r\n    // If no error in textfield\r\n    checkNameInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (nameInput.current.value.length > 0) {\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'portfolioName': nameInput.current.value,\r\n          'userId': props.userData.userId,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/portfolio/create\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // get create object\r\n            props.handleClose();\r\n          } else {\r\n            setErrorMsg(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('create new portfolio failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Create New Portfolio</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={nameInput}\r\n            margin=\"dense\"\r\n            id=\"portfolioName\"\r\n            label=\"Portfolio name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={nameInputIsError}\r\n            helperText={nameInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={nameInputOnBlur}\r\n          />\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMsg}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button variant=\"contained\" onClick={createButtonOnClick} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    textOverflow: 'ellipsis'\r\n  }\r\n}));\r\n\r\nexport default function StockListItem(props) {\r\n  /* \r\n    props data structure-\r\n      companyName(string): the name of the company, Ex: Apple Inc.\r\n      companySymbol(string): the symbol of the company in the market, Ex: NASDAQ: AAPL\r\n  */\r\n  const classes = useStyles();\r\n\r\n  const deleteButtonOnClick = () => {\r\n    props.removeSelectedStock(props.companyId);\r\n  };\r\n\r\n  const listItemOnClick = () => {\r\n    props.stockListItemOnclick(props.companySymbol);\r\n  };\r\n\r\n\r\n  return (\r\n    <ListItem button alignItems=\"flex-start\" onClick={listItemOnClick}>\r\n      <ListItemText classes={{ primary: classes.listItemText }} primary={props.companyName} secondary={props.companySymbol} />\r\n      <IconButton edge=\"end\" aria-label=\"delete\" onClick={deleteButtonOnClick}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport StockListItem from './StockListItem'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stockComponent: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  listSubHeader: {\r\n    textAlign: 'initial'\r\n  },\r\n  listTitle: {\r\n    margin: theme.spacing(1, 1, 1),\r\n  },\r\n  emptyText: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\n\r\nfunction StockSelectedList(props) {\r\n  const classes = useStyles();\r\n\r\n  const tempSelectedStocks = [{\r\n    'companyName':'Apple',\r\n    'companySymbol': 'Apple',\r\n    'companyId':'Apple',\r\n  },\r\n  {\r\n    'companyName':'BANANA',\r\n    'companySymbol': 'BANANA',\r\n    'companyId':'BANANA',\r\n  }\r\n  ];\r\n\r\n  const removeSelectedStock = (id) => {\r\n    var selectedStocks = Array.from(props.selectedStocks);\r\n    var index = selectedStocks.findIndex(x => x.companyId === id);\r\n    if (index !== -1) {\r\n      selectedStocks.splice(index, 1);\r\n      props.setSelectedStocks(selectedStocks);\r\n    }\r\n  };\r\n\r\n  const stockListItemOnclick = (symbol) => {\r\n    console.log(symbol);\r\n    if (symbol === props.currentSelectedStock) {\r\n      props.setCurrentSelectedStock(symbol);\r\n    }\r\n  }\r\n\r\n  const renderRow = (props) => {\r\n    const { data, index, style } = props;\r\n    const rowItem = data[index];\r\n    return (\r\n      <div style={style}>\r\n        {\r\n          <StockListItem\r\n            companyName={rowItem.companyName}\r\n            companySymbol={rowItem.companySymbol}\r\n            companyId={rowItem.companyId}\r\n            removeSelectedStock={removeSelectedStock}\r\n            stockListItemOnclick={stockListItemOnclick}\r\n          >\r\n          </StockListItem>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.stockComponent}>\r\n      <Typography variant=\"h6\" className={classes.listTitle}>\r\n        Selected Stocks\r\n      </Typography>\r\n      <Divider></Divider>\r\n      { props.selectedStocks.length > 0 ?\r\n      <FixedSizeList\r\n        height={350}\r\n        itemSize={60}\r\n        itemCount={props.selectedStocks.length}\r\n        itemData={props.selectedStocks}\r\n      >\r\n        {renderRow}\r\n      </FixedSizeList >\r\n      :\r\n      <Typography className={classes.emptyText}>\r\n        This portfolio is empty\r\n      </Typography>\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StockSelectedList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockSelectedList from '../components/StockSelectedList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    padding: theme.spacing(1, 1, 1),\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '60vw',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50vw',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '25vw',\r\n    },\r\n    position: \"fixed\",\r\n    zIndex: 1400,\r\n    background: 'white'\r\n  },\r\n}));\r\n\r\nexport default function StockSelectSection(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root} boxShadow={1}>\r\n      <StockSelectedList\r\n        selectedStocks={props.selectedStocks}\r\n        setSelectedStocks={props.setSelectedStocks}\r\n        currentSelectedStock={props.currentSelectedStock}\r\n        setCurrentSelectedStock={props.setCurrentSelectedStock}\r\n      />\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport matchSorter from 'match-sorter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchBox: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 300,\r\n  },\r\n}));\r\n\r\nfunction StockSearchBox(props) {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const { additionalStyles, companyData, selectedStocks, setSelectedStocks } = props\r\n  const classes = useStyles();\r\n  const filterOptions = (options, { inputValue }) => {\r\n    return matchSorter(options, inputValue, { keys: ['company_name', 'symbol'] }).slice(0, 10);\r\n  };\r\n\r\n  const stockOnSelected = (event, newValue) => {\r\n    addStockToPortfolio(newValue);\r\n  };\r\n\r\n  const addStockToPortfolio = (newValue) => {\r\n    if (selectedStocks.find(x => x.companyId === newValue.id_) != null) {\r\n      props.setDialogTitle(\"Error\")\r\n      props.setDialogMessage(\"The stock is already in the list\");\r\n      props.openMessageDialog();\r\n    } else {\r\n      const newSelectedStock = {\r\n        \"companyName\": newValue.company_name,\r\n        \"companySymbol\": newValue.symbol,\r\n        \"companyId\": newValue.id_\r\n      };\r\n      setSelectedStocks([...selectedStocks, newSelectedStock]);\r\n      props.setDialogTitle(\"Success\")\r\n      props.setDialogMessage(\"Add \" + newValue.company_name + \" to your portfolio\");\r\n      props.openMessageDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        freeSolo\r\n        className={classes.searchBox}\r\n        id=\"search-box\"\r\n        disableClearable\r\n        size=\"small\"\r\n        onChange={stockOnSelected}\r\n        options={companyData}\r\n        getOptionLabel={(option) => option.company_name}\r\n        filterOptions={filterOptions}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Add company\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockSearchBox;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  expandButton: {\r\n    color: 'inherit'\r\n  },\r\n  popperRoot: {\r\n    zIndex: 1400,\r\n  },\r\n  popperMenuItem: {\r\n    paddingRight: \"8px\"\r\n  },\r\n}));\r\n\r\nexport default function PortfolioMenuButtons(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const toogleDrawer = () => {\r\n    props.setSideBarExpand(!props.isSideBarExpanded);\r\n  };\r\n\r\n  const handlePortfolioToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const portfolioButtonOnClick = (id) => {\r\n    console.log(id);\r\n  }\r\n\r\n  const createPortfolioOnClick = (e) => {\r\n    if (props.userData.userId == undefined) {\r\n      props.setDialogTitle(\"Error\")\r\n      props.setDialogMessage(\"Please login first\");\r\n      props.openMessageDialog();\r\n    } else {\r\n      props.handleCreatePortfolioDialogOpen();\r\n    }\r\n    handleClose(e)\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n\r\n  const portfolioMenuItems = props.userPortfolios.map((portfolio) =>\r\n    <MenuItem key={portfolio.protfolioId.toString()} onClick={() => {portfolioButtonOnClick(portfolio.protfolioId)}}>\r\n      <Typography variant=\"inherit\" noWrap>\r\n        {portfolio.portfolioName}\r\n      </Typography>\r\n    </MenuItem>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        edge=\"start\"\r\n        className={classes.menuButton}\r\n        onClick={toogleDrawer}\r\n        color=\"inherit\"\r\n        aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Button\r\n        endIcon={<ExpandMoreIcon />}\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        className={classes.expandButton}\r\n        onClick={handlePortfolioToggle}\r\n      >\r\n        <Typography variant=\"inherit\" noWrap>\r\n          My Portfolios\r\n        </Typography>\r\n      </Button>\r\n      <Popper\r\n        className={classes.popperRoot}\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  {portfolioMenuItems}\r\n                  <Divider light component=\"li\" />\r\n                  <MenuItem onClick={createPortfolioOnClick}>\r\n                    <Typography variant=\"inherit\" noWrap className={classes.popperMenuItem}>\r\n                      Create New Portfolio\r\n                      </Typography>\r\n                    <AddIcon fontSize=\"small\" className={classes.popperMenuItem} />\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport default function PortfolioDetailButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.showSearchButton &&\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"expand search stock\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      }\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"show performance\">\r\n        <ShowChartIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"asset weight\">\r\n        <BarChartIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport StockSearchBox from '../components/StockSearchBox'\r\nimport PortfolioMenuButtons from './PortfolioMenuButtons';\r\nimport PortfolioDetailButtons from './PortfolioDetailButtons';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '60px',\r\n    padding: theme.spacing(1, 2, 1),\r\n    boxShadow: '0 0 1px 1px rgba(0, 0, 0 ,.1)'\r\n  },\r\n  menuButtons: {\r\n    display: 'inline-flex'\r\n  }\r\n}));\r\n\r\nexport default function PortfolioToolBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} sm={3} className={classes.menuButtons}>\r\n        <PortfolioMenuButtons\r\n          isSideBarExpanded={props.isSideBarExpanded}\r\n          setSideBarExpand={props.setSideBarExpand}\r\n          userPortfolios={props.userPortfolios}\r\n          setUserPortfolios={props.setUserPortfolios}\r\n          currentSelectedPortfolio={props.currentSelectedPortfolio}\r\n          setCurrentSelectedPortfolio={props.setCurrentSelectedPortfolio}\r\n          handleCreatePortfolioDialogOpen={props.handleCreatePortfolioDialogOpen}\r\n          setDialogTitle={props.setDialogTitle}\r\n          setDialogMessage={props.setDialogMessage}\r\n          openMessageDialog={props.openMessageDialog}\r\n          userData={props.userData}\r\n        >\r\n        </PortfolioMenuButtons>\r\n        <Hidden smUp>\r\n          <PortfolioDetailButtons\r\n            showSearchButton={true}\r\n          >\r\n          </PortfolioDetailButtons>\r\n        </Hidden>\r\n      </Grid>\r\n      <Grid item container xs={12} sm={6} justify = \"center\" >\r\n        <StockSearchBox\r\n            selectedStocks={props.selectedStocks} \r\n            setSelectedStocks={props.setSelectedStocks}\r\n            companyData={props.companyData}\r\n            setDialogTitle={props.setDialogTitle}\r\n            setDialogMessage={props.setDialogMessage}\r\n            openMessageDialog={props.openMessageDialog}\r\n          >\r\n        </StockSearchBox>\r\n      </Grid>\r\n      <Hidden xsDown>\r\n        <Grid item container sm={3} justify = \"center\" >\r\n          <PortfolioDetailButtons>\r\n          </PortfolioDetailButtons>\r\n        </Grid>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function NewsCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Apple is now bankrupt?!\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          2099/04/01\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Just kidding.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NewsCard from '../components/NewsCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newsSection: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function NewsSection(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.newsSection}>\r\n      <NewsCard>\r\n      </NewsCard>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MessageDialog from '../components/MessageDialog'\r\nimport CreatePortfolioDialog from '../components/CreatePortfolioDialog'\r\nimport StockSelectSection from '../views/StockSelectSection'\r\nimport PortfolioToolBar from '../components/PortfolioToolBar'\r\nimport NewsSection from '../views/NewsSection'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { motion } from \"framer-motion\"\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  portfolioPage: {\r\n    height: 'calc(100% - 56px)',\r\n    [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\r\n      height: 'calc(100% - 48px)',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 'calc(100% - 64px)',\r\n    },\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  portfolioContent: {\r\n    flex: 'auto'\r\n  },\r\n  companyName: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  sideBar: {\r\n    zIndex: 1400,\r\n  }\r\n}));\r\n\r\nfunction PortfolioPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [companyData, setCompanyData] = React.useState([]);\r\n  const [userPortfolios, setUserPortfolios] = React.useState([]); \r\n  const [selectedStocks, setSelectedStocks] = React.useState([]);\r\n  const [dataLoaded, setDataLoaded] = React.useState(false);\r\n  const [isSideBarExpanded, setSideBarExpand] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [isCreatePortfolioDialogOpen, setCreatePortfolioDialogOpen] = React.useState(false);\r\n  const [dialogTitle, setDialogTitle] = React.useState(\"\");\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n  const [currentSelectedPortfolio, setCurrentSelectedPortfolio] = React.useState(null);\r\n  const [currentSelectedStock, setCurrentSelectedStock] = React.useState(\"APPL\");\r\n\r\n  const sideBarTransitions = {\r\n    open: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        duration: 0.5\r\n      }\r\n    },\r\n    closed: {\r\n      opacity: 0.5,\r\n      x: '-100%',\r\n      transition: {\r\n        duration: 1.0\r\n      }\r\n    }\r\n  };\r\n\r\n  // const userPortfolios = [{\r\n  //   \"userId\": 0,\r\n  //   \"protfolioId\": 0,\r\n  //   \"portfolioName\": \"Default\",\r\n  //   \"portfolioStockIds\": [0, 1, 2],\r\n  // },];\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  const handleCreatePortfolioDialogOpen = () => {\r\n    setCreatePortfolioDialogOpen(true);\r\n  };\r\n\r\n  const handleCreatePortfolioDialogClose = () => {\r\n    setCreatePortfolioDialogOpen(false);\r\n  };\r\n\r\n  const getCompanyData = async (e) => {\r\n    const request = {\r\n      method: 'GET',\r\n    }\r\n\r\n    try {\r\n      console.log(\"Try to get company data\");\r\n      //setLoading(true);\r\n      const response = await fetch(BASEURL + \"/company\", request)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        if (jsonData.isSuccess) {\r\n          setDataLoaded(true);\r\n          console.log(jsonData.data.length)\r\n          setCompanyData(jsonData.data);\r\n          console.log(jsonData.data[0]);\r\n        } else {\r\n          alert(jsonData.errorMsg);\r\n          setDataLoaded(false);\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      setDataLoaded(false);\r\n      console.log('Fetch company data failed', err);\r\n    }\r\n    finally {\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!dataLoaded) {\r\n      getCompanyData();\r\n    }\r\n  }, [dataLoaded]);\r\n\r\n  return (\r\n    <div className={classes.portfolioPage}>\r\n      <MessageDialog\r\n        isOpen={isMessageDialogOpen}\r\n        handleClose={handleMessageDialogClose}\r\n        title={dialogTitle}\r\n        message={dialogMessage}\r\n      >\r\n      </MessageDialog>\r\n      <CreatePortfolioDialog\r\n        isOpen={isCreatePortfolioDialogOpen}\r\n        handleClose={handleCreatePortfolioDialogClose}\r\n        currentSelectedPortfolio={currentSelectedPortfolio}\r\n        setCurrentSelectedPortfolio={setCurrentSelectedPortfolio}\r\n        userData={props.userData}\r\n      >\r\n      </CreatePortfolioDialog>\r\n      <PortfolioToolBar\r\n        selectedStocks={selectedStocks}\r\n        setSelectedStocks={setSelectedStocks}\r\n        companyData={companyData}\r\n        setDialogTitle={setDialogTitle}\r\n        setDialogMessage={setDialogMessage}\r\n        isSideBarExpanded={isSideBarExpanded}\r\n        setSideBarExpand={setSideBarExpand}\r\n        openMessageDialog={handleMessageDialogOpen}\r\n        userPortfolios={userPortfolios}\r\n        setUserPortfolios={setUserPortfolios}\r\n        currentSelectedPortfolio={currentSelectedPortfolio}\r\n        setCurrentSelectedPortfolio={setCurrentSelectedPortfolio}\r\n        handleCreatePortfolioDialogOpen={handleCreatePortfolioDialogOpen}\r\n        userData={props.userData}\r\n      >\r\n      </PortfolioToolBar>\r\n      <motion.div\r\n        className={classes.sideBar}\r\n        initial={'closed'}\r\n        animate={isSideBarExpanded ? \"open\" : \"closed\"}\r\n        variants={sideBarTransitions}\r\n      >\r\n        <StockSelectSection\r\n          selectedStocks={selectedStocks}\r\n          setSelectedStocks={setSelectedStocks}\r\n          currentSelectedStock={currentSelectedStock}\r\n          setCurrentSelectedStock={setCurrentSelectedStock}\r\n        >\r\n        </StockSelectSection>\r\n      </motion.div>\r\n      <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\" className={classes.portfolioContent}>\r\n        <Grid item xs={6}>\r\n          <Typography className={classes.companyName}  variant=\"h5\">\r\n            Apple Inc.\r\n          </Typography>\r\n          <NewsSection>\r\n          </NewsSection>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport PortfolioPage from './pages/PortfolioPage'\r\nimport Cookies from 'universal-cookie';\r\n\r\n// {\r\n//   height: 'calc(100% - 56px)',\r\n//   [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\r\n//     height: 'calc(100% - 48px)',\r\n//   },\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     height: 'calc(100% - 64px)',\r\n//   },\r\n// },\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nconst toolbarRelativeProperties = (property, modifier = value => value) => theme =>\r\n  Object.keys(theme.mixins.toolbar).reduce((style, key) => {\r\n    const value = theme.mixins.toolbar[key];\r\n    if (key === 'minHeight') {\r\n      return { ...style, [property]: modifier(value) };\r\n    }\r\n    if (value.minHeight !== undefined) {\r\n      return { ...style, [key]: { [property]: modifier(value.minHeight) } };\r\n    }\r\n    return style;\r\n  }, {});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userId: cookies.get('userId'),\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopNavBar userData={userData} setUserData={setUserData}></TopNavBar>\r\n      <PortfolioPage\r\n        userData={userData}\r\n      >\r\n      </PortfolioPage>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme.js'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}