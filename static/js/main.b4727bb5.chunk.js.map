{"version":3,"sources":["components/NavBarAccountButton.js","Constants.js","components/LoginDialog.js","components/SignupDialog.js","components/MessageDialog.js","components/TopNavBar.js","components/SubmitSelectionButton.js","components/InvestmentStrategyRadios.js","components/StockListItem.js","components/StockSelectedList.js","components/StockSearchBox.js","views/StockSelectSection.js","pages/PortfolioPage.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","accountButton","color","NavBarAccountButton","props","classes","React","useState","open","setOpen","anchorRef","useRef","cookies","Cookies","handleClose","event","current","contains","target","logoutButtonOnClick","e","setUserData","userName","userEmail","remove","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","startIcon","ref","aria-controls","undefined","aria-haspopup","onClick","get","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","BASEURL","dialogLeftButton","marginRight","dialogInputBox","margin","spacing","dialogActions","errorMessage","circleProgress","zIndex","position","top","left","marginTop","marginLeft","LoginDialog","loading","setLoading","emailInputIsError","setEmailError","passwordInputIsError","setPasswordError","emailInputErrorMsg","setEmailErrorMsg","passwordInputMsg","setPasswordErrorMsg","errorMsg","setErrorMsg","emailInput","passwordInput","checkEmailInputEmpty","value","length","console","log","checkPasswordInputEmpty","openSignupDialog","a","openSignup","loginButtonOnClick","request","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","jsonData","isSuccess","set","path","alert","Dialog","isOpen","onClose","aria-labelledby","Fade","in","unmountOnExit","CircularProgress","DialogTitle","DialogContent","TextField","autoFocus","inputRef","label","type","variant","fullWidth","error","helperText","onBlur","Typography","DialogActions","SignupDialog","nameInputIsError","setNameError","nameInputErrorMsg","setNameErrorMsg","nameInput","checkNameInputEmpty","signUpButtonOnClick","setDialogMessage","openMessageDialog","message","textAlign","MessageDialog","title","flexGrow","brandButton","rightButtons","TopNavBar","isLoginDialogOpen","setLoginDialogOpen","isSignupDialogOpen","setSignupDialogOpen","isMessageDialogOpen","setMessageDialogOpen","dialogMessage","AppBar","Toolbar","size","userData","CreatePortfolioButton","submitSelection","settings","InvestmentStrategyRadios","setValue","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","StockListItem","ListItem","alignItems","ListItemText","primary","companyName","secondary","companySymbol","IconButton","edge","removeSelectedStock","companyId","stockComponent","listSubHeader","StockSelectedList","selectedStocks","additionalStyles","Array","from","index","findIndex","x","splice","setSelectedStocks","renderRow","data","rowItem","Box","height","itemSize","itemCount","itemData","searchBox","padding","minWidth","StockSearchBox","companyData","Autocomplete","freeSolo","disableClearable","newValue","find","id_","newSelectedStock","company_name","symbol","options","getOptionLabel","option","filterOptions","inputValue","matchSorter","keys","slice","renderInput","params","InputProps","StockSelectSection","boxShadow","PortfolioPage","dataLoaded","setDataLoaded","setCompanyData","dialogTitle","getCompanyData","Grid","container","direction","justify","item","xs","gridItem","App","createMuiTheme","palette","main","themeName","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b4727bb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  accountButton: {\r\n    color: 'inherit'\r\n  }\r\n}));\r\n\r\nexport default function NavBarAccountButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const cookies = new Cookies();\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutButtonOnClick = (e) => {\r\n    props.setUserData({\r\n      userName: null,\r\n      userEmail: null,\r\n    });\r\n\r\n    // Remove user data from cookies\r\n    const cookies = new Cookies();\r\n    cookies.remove('userName');\r\n    cookies.remove('userEmail');\r\n\r\n    handleClose(e)\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button \r\n          startIcon={<AccountCircleIcon />}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          className={classes.accountButton}\r\n          onClick={handleToggle}\r\n        >\r\n          {\r\n            cookies.get('userName') == undefined ? \r\n              \"Account\"\r\n            : \r\n            cookies.get('userName')\r\n          }\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={logoutButtonOnClick}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const BASEURL = \"http://127.0.0.1:5000\"","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cookies from 'universal-cookie';\r\nimport { BASEURL } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogLeftButton: {\r\n    marginRight: 'auto',\r\n  },\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  errorMessage: {\r\n    color: \"#f44336\",\r\n    margin: theme.spacing(0, 2, 0),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function LoginDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [errorMsgIsShow, setErrorMsgShow] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  }\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const openSignupDialog = async (e) => {\r\n    props.openSignup();\r\n    props.handleClose();\r\n  }\r\n\r\n  const loginButtonOnClick = async (e) => {\r\n    // If no error in both textfield\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    setErrorMsg(\"\");\r\n    if (emailInput.current.value.length > 0 && passwordInput.current.value.length > 0) {\r\n      // Do Login works\r\n      // Assume authorization is pass\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/login\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            // Temp user name\r\n            const userName = \"Steve\";\r\n            const userEmail = emailInput.current.value;\r\n\r\n            props.setUserData({\r\n              userName: userName,\r\n              userEmail: userEmail,\r\n            });\r\n\r\n            // Store user data into cookies\r\n            const cookies = new Cookies();\r\n            cookies.set('userName', userName, { path: '/' });\r\n            cookies.set('userEmail', userEmail, { path: '/' });\r\n            props.handleClose();\r\n          } else {\r\n            setErrorMsg(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMsg}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button onClick={openSignupDialog} color=\"primary\" className={classes.dialogLeftButton}>\r\n            Sign up\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={loginButtonOnClick} color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogInputBox: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  dialogActions: {\r\n    display: \"flex\",\r\n    margin: theme.spacing(0, 2, 2),\r\n  },\r\n  circleProgress: {\r\n    zIndex: 999,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: \"-24px\",\r\n    marginLeft: \"-24px\"\r\n  },\r\n}));\r\n\r\nexport default function SignupDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [nameInputIsError, setNameError] = React.useState(false);\r\n  const [emailInputIsError, setEmailError] = React.useState(false);\r\n  const [passwordInputIsError, setPasswordError] = React.useState(false);\r\n\r\n  const [nameInputErrorMsg, setNameErrorMsg] = React.useState(\"\");\r\n  const [emailInputErrorMsg, setEmailErrorMsg] = React.useState(\"\");\r\n  const [passwordInputMsg, setPasswordErrorMsg] = React.useState(\"\");\r\n\r\n  const nameInput = React.useRef();\r\n  const emailInput = React.useRef();\r\n  const passwordInput = React.useRef();\r\n\r\n  const checkNameInputEmpty = () => {\r\n    if (nameInput.current.value.length < 1) {\r\n      console.log(\"Name is empty\")\r\n      setNameError(true);\r\n      setNameErrorMsg(\"Name cannot be empty\");\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkEmailInputEmpty = () => {\r\n    if (emailInput.current.value.length < 1) {\r\n      console.log(\"Email is empty\")\r\n      setEmailError(true);\r\n      setEmailErrorMsg(\"Email cannot be empty\");\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const checkPasswordInputEmpty = () => {\r\n    if (passwordInput.current.value.length < 1) {\r\n      console.log(\"Password is empty\")\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg(\"Password cannot be empty\");\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg(\"\");\r\n    }\r\n  };\r\n\r\n  // Do validate here when the focus of input field is out\r\n  // Check whether the input is empty\r\n  const nameInputOnBlur = () => {\r\n    checkNameInputEmpty();\r\n  };\r\n\r\n  const emailInputOnBlur = () => {\r\n    checkEmailInputEmpty();\r\n  };\r\n\r\n  const passwordInputOnBlur = () => {\r\n    checkPasswordInputEmpty();\r\n  };\r\n\r\n  const signUpSucceed = () => {\r\n    props.setDialogMessage(\"Sign up success!\");\r\n    props.openMessageDialog();\r\n    props.handleClose();\r\n  };\r\n\r\n  const signUpButtonOnClick = async (e) => {\r\n    checkNameInputEmpty();\r\n    checkEmailInputEmpty();\r\n    checkPasswordInputEmpty();\r\n    // If no error in both textfield\r\n    if (nameInput.current.value.length > 0 &&\r\n      emailInput.current.value.length > 0 &&\r\n      passwordInput.current.value.length > 0) {\r\n\r\n      const request = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'userName': nameInput.current.value,\r\n          'userEmail': emailInput.current.value,\r\n          'userPassword': passwordInput.current.value,\r\n        })\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(BASEURL + \"/user/signup\", request)\r\n        if (response.ok) {\r\n          const jsonData = await response.json();\r\n          if (jsonData.isSuccess) {\r\n            signUpSucceed();\r\n          } else {\r\n            alert(jsonData.errorMsg);\r\n          }\r\n        }\r\n      }\r\n      catch (err) {\r\n        alert('fetch failed', err);\r\n      }\r\n      finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <Fade\r\n          in={loading}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress className={classes.circleProgress} />\r\n        </Fade>\r\n        <DialogTitle id=\"form-dialog-title\">Signup</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            inputRef={nameInput}\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"User Name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={nameInputIsError}\r\n            helperText={nameInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={nameInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={emailInput}\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={emailInputIsError}\r\n            helperText={emailInputErrorMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={emailInputOnBlur}\r\n          />\r\n          <TextField\r\n            inputRef={passwordInput}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            error={passwordInputIsError}\r\n            helperText={passwordInputMsg}\r\n            className={classes.dialogInputBox}\r\n            onBlur={passwordInputOnBlur}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogActions}>\r\n          <Button variant=\"contained\" onClick={signUpButtonOnClick} color=\"primary\">\r\n            Sign up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function MessageDialog(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {\r\n          props.title != null && \r\n          <DialogTitle>{props.title}</DialogTitle>\r\n        }\r\n        <DialogContent>\r\n          <Typography className={classes.message}>\r\n            {props.message}\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBarAccountButton from './NavBarAccountButton'\r\nimport LoginDialog from './LoginDialog'\r\nimport SignupDialog from './SignupDialog'\r\nimport MessageDialog from './MessageDialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  brandButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  rightButtons: {\r\n    marginLeft: \"auto\",\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport default function TopNavBar(props) {\r\n  //This component is the navigation bar on the top of the page\r\n  const classes = useStyles();\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isSignupDialogOpen, setSignupDialogOpen] = React.useState(false);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    setLoginDialogOpen(true);\r\n  };\r\n\r\n  const handleLoginDialogClose = () => {\r\n    setLoginDialogOpen(false);\r\n  };\r\n\r\n  const handleSignupDialogOpen = () => {\r\n    setSignupDialogOpen(true);\r\n  };\r\n\r\n  const handleSignupDialogClose = () => {\r\n    setSignupDialogOpen(false);\r\n  };\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <LoginDialog\r\n          isOpen={isLoginDialogOpen}\r\n          handleClose={handleLoginDialogClose}\r\n          setUserData={props.setUserData}\r\n          openSignup={handleSignupDialogOpen}>\r\n        </LoginDialog>\r\n        <SignupDialog\r\n          isOpen={isSignupDialogOpen}\r\n          handleClose={handleSignupDialogClose}\r\n          setDialogMessage={setDialogMessage}\r\n          openMessageDialog={handleMessageDialogOpen}\r\n        >\r\n        </SignupDialog>\r\n        <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          message={dialogMessage}\r\n        >\r\n        </MessageDialog>\r\n        <Toolbar>\r\n          <Button className={classes.brandButton} color=\"inherit\" size=\"large\">\r\n            AI Asset\r\n          </Button>\r\n          <section className={classes.rightButtons}>\r\n            {\r\n              props.userData.userEmail == undefined\r\n                ?\r\n                <Button color=\"inherit\" onClick={(e) => { handleLoginDialogOpen() }}>\r\n                  Login\r\n                </Button>\r\n                :\r\n                <NavBarAccountButton setUserData={props.setUserData}></NavBarAccountButton>\r\n            }\r\n          </section>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CreatePortfolioButton() {\r\n  const classes = useStyles();\r\n\r\n  const submitSelection = async () => {\r\n    // Submit user's stock selection to the server\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'selectedStocks': ['123']\r\n        })\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/post-test\", settings)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        console.log(jsonData);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log('fetch failed', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"primary\" size='large' onClick={(e) => {submitSelection()}}>\r\n        Create Portfolio\r\n      </Button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'initial',\r\n  }\r\n}));\r\n\r\nexport default function InvestmentStrategyRadios() {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState('active');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Investment Strategy</FormLabel>\r\n        <RadioGroup aria-label=\"Investment Strategy\" name=\"strategy\" value={value} onChange={handleChange}>\r\n          <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n          <FormControlLabel value=\"passive\" control={<Radio />} label=\"Passive\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function StockListItem(props) {\r\n  /* \r\n    props data structure-\r\n      companyName(string): the name of the company, Ex: Apple Inc.\r\n      companySymbol(string): the symbol of the company in the market, Ex: NASDAQ: AAPL\r\n  */\r\n  const classes = useStyles();\r\n\r\n  const deleteButtonOnClick = () => {\r\n    props.removeSelectedStock(props.companyId);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText primary={props.companyName} secondary={props.companySymbol} />\r\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={deleteButtonOnClick}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport StockListItem from './StockListItem'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  stockComponent: {},\r\n  listSubHeader: {\r\n    textAlign: 'initial'\r\n  }\r\n}));\r\n\r\n\r\n// function renderRow(props) {\r\n//   const { data, index, style } = props;\r\n//   const rowItem = data[index];\r\n//   return (\r\n//     <div style={style}>\r\n//       {\r\n//         <StockListItem companyName={rowItem.companyName} companySymbol={rowItem.companySymbol}>\r\n//         </StockListItem>\r\n//       }\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nfunction StockSelectedList(props) {\r\n  const { selectedStocks, additionalStyles } = props\r\n  const classes = useStyles();\r\n\r\n  const removeSelectedStock = (id) => {\r\n    var selectedStocks = Array.from(props.selectedStocks);\r\n    var index = selectedStocks.findIndex(x => x.companyId === id);\r\n    if (index !== -1) {\r\n      selectedStocks.splice(index, 1);\r\n      props.setSelectedStocks(selectedStocks);\r\n    }\r\n  };\r\n\r\n  const renderRow = (props) => {\r\n    const { data, index, style } = props;\r\n    const rowItem = data[index];\r\n    return (\r\n      <div style={style}>\r\n        {\r\n          <StockListItem\r\n            companyName={rowItem.companyName}\r\n            companySymbol={rowItem.companySymbol}\r\n            companyId={rowItem.companyId}\r\n            removeSelectedStock={removeSelectedStock}\r\n          >\r\n          </StockListItem>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={additionalStyles.stockComponent}>\r\n      <FixedSizeList\r\n        height={350}\r\n        itemSize={60}\r\n        itemCount={selectedStocks.length}\r\n        itemData={selectedStocks}\r\n      >\r\n        {renderRow}\r\n      </FixedSizeList >\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StockSelectedList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport matchSorter from 'match-sorter'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  stockComponent: {},\r\n  searchBox: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 330,\r\n  },\r\n}));\r\n\r\nfunction StockSearchBox(props) {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const { additionalStyles, companyData, selectedStocks, setSelectedStocks } = props\r\n  const classes = useStyles();\r\n  const filterOptions = (options, { inputValue }) => {\r\n    return matchSorter(options, inputValue, { keys: ['company_name', 'symbol'] }).slice(0, 10);\r\n  };\r\n\r\n  const stockOnSelected = (event, newValue) => {\r\n    if (selectedStocks.find(x => x.companyId === newValue.id_) != null) {\r\n      props.setDialogMessage(\"The stock is already in the list\");\r\n      props.openMessageDialog();\r\n    } else {\r\n      const newSelectedStock = {\r\n        \"companyName\": newValue.company_name,\r\n        \"companySymbol\": newValue.symbol,\r\n        \"companyId\": newValue.id_\r\n      };\r\n      setSelectedStocks([...selectedStocks, newSelectedStock]);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={additionalStyles.stockComponent}>\r\n      <Autocomplete\r\n        freeSolo\r\n        className={classes.searchBox}\r\n        id=\"search-box\"\r\n        disableClearable\r\n        onChange={stockOnSelected}\r\n        options={companyData}\r\n        getOptionLabel={(option) => option.company_name}\r\n        filterOptions={filterOptions}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search company\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockSearchBox;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockSelectedList from '../components/StockSelectedList'\r\nimport StockSearchBox from '../components/StockSearchBox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2, 2, 2),\r\n    flexGrow: 1,\r\n  },\r\n  stockComponent: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  }\r\n}));\r\n  \r\nexport default function StockSelectSection(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Box className={classes.root} boxShadow={0}>\r\n      <StockSearchBox \r\n        additionalStyles={classes}\r\n        selectedStocks={props.selectedStocks} \r\n        setSelectedStocks={props.setSelectedStocks}\r\n        companyData={props.companyData}\r\n        setDialogMessage={props.setDialogMessage}\r\n        openMessageDialog={props.openMessageDialog}\r\n      />\r\n      <StockSelectedList \r\n       additionalStyles={classes}\r\n       selectedStocks={props.selectedStocks}\r\n       setSelectedStocks={props.setSelectedStocks}/>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MessageDialog from '../components/MessageDialog'\r\nimport InvestmentStrategyRadios from '../components/InvestmentStrategyRadios'\r\nimport SubmitSelectionButton from '../components/SubmitSelectionButton';\r\nimport StockSelectSection from '../views/StockSelectSection'\r\n\r\nimport { BASEURL } from '../Constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction PortfolioPage() {\r\n  const classes = useStyles();\r\n\r\n  const [dataLoaded, setDataLoaded] = React.useState(false);\r\n  const [companyData, setCompanyData] = React.useState([]);\r\n  const [selectedStocks, setSelectedStocks] = React.useState([]);\r\n  const [isMessageDialogOpen, setMessageDialogOpen] = React.useState(false);\r\n  const [dialogTitle, setDialogTitle] = React.useState(\"Error\");\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n\r\n  const handleMessageDialogOpen = () => {\r\n    setMessageDialogOpen(true);\r\n  };\r\n\r\n  const handleMessageDialogClose = () => {\r\n    setMessageDialogOpen(false);\r\n  };\r\n\r\n  const getCompanyData = async (e) => {\r\n    const request = {\r\n      method: 'GET',\r\n    }\r\n\r\n    try {\r\n      console.log(\"Try to get company data\");\r\n      //setLoading(true);\r\n      const response = await fetch(BASEURL + \"/company\", request)\r\n      if (response.ok) {\r\n        const jsonData = await response.json();\r\n        if (jsonData.isSuccess) {\r\n          setDataLoaded(true);\r\n          setCompanyData(jsonData.data);\r\n          console.log(jsonData.data[0]);\r\n        } else {\r\n          alert(jsonData.errorMsg);\r\n          setDataLoaded(false);\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      setDataLoaded(false);\r\n      console.log('Fetch company data failed', err);\r\n    }\r\n    finally {\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!dataLoaded) {\r\n      getCompanyData();\r\n    }\r\n  }, [dataLoaded]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MessageDialog\r\n          isOpen={isMessageDialogOpen}\r\n          handleClose={handleMessageDialogClose}\r\n          title={dialogTitle}\r\n          message={dialogMessage}\r\n        >\r\n      </MessageDialog>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid className={classes.title} item xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Choose your strategy\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12}>\r\n          <InvestmentStrategyRadios />\r\n        </Grid>\r\n        <Grid className={classes.title} item xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Select Stocks\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12} >\r\n          <StockSelectSection \r\n            selectedStocks={selectedStocks} \r\n            setSelectedStocks={setSelectedStocks} \r\n            companyData={companyData}\r\n            setDialogMessage={setDialogMessage}\r\n            openMessageDialog={handleMessageDialogOpen}\r\n          >\r\n          </StockSelectSection>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} item xs={12} >\r\n          <SubmitSelectionButton />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopNavBar from './components/TopNavBar'\r\nimport SubmitSelectionButton from './components/SubmitSelectionButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InvestmentStrategyRadios from './components/InvestmentStrategyRadios'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StockSelectSection from './views/StockSelectSection'\r\nimport PortfolioPage from './pages/PortfolioPage'\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  title: {\r\n    textAlign: 'initial',\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Try to get user data from cookies\r\n  const cookies = new Cookies();\r\n  const [userData, setUserData] = React.useState({\r\n    userName: cookies.get('userName'),\r\n    userEmail: cookies.get('userEmail'),\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <TopNavBar userData={userData} setUserData={setUserData}></TopNavBar>\r\n        <PortfolioPage></PortfolioPage>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#424242' },\r\n  secondary: { main: '#424242' }\r\n};\r\nconst themeName = 'Tundora Tundora Dog';\r\nconst theme = createMuiTheme({ palette, themeName });\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme.js'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <ThemeProvider theme={theme}>\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}